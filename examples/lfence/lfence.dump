
final:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x18b>
  400248:	78 38                	js     400282 <_init-0x17e>
  40024a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 03                	add    %al,(%rbx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 02                	add    %al,(%rdx)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 00                	add    %al,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 28                	add    %ch,(%rax)
  400285:	2d 72 79 00 9e       	sub    $0x9e007972,%eax
  40028a:	5d                   	pop    %rbp
  40028b:	15 2a 66 01 c4       	adc    $0xc401662a,%eax
  400290:	11 47 65             	adc    %eax,0x65(%rdi)
  400293:	53                   	push   %rbx
  400294:	f7                   	.byte 0xf7
  400295:	45 d5                	rex.RB (bad) 
  400297:	83                   	.byte 0x83

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     (%rax),%eax
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	12 00                	adc    (%rax),%al
  4002ea:	00 00                	add    %al,(%rax)
  4002ec:	12 00                	adc    (%rax),%al
	...
  4002fe:	00 00                	add    %al,(%rax)
  400300:	19 00                	sbb    %eax,(%rax)
  400302:	00 00                	add    %al,(%rax)
  400304:	12 00                	adc    (%rax),%al
	...
  400316:	00 00                	add    %al,(%rax)
  400318:	37                   	(bad)  
  400319:	00 00                	add    %al,(%rax)
  40031b:	00 20                	add    %ah,(%rax)
	...

Disassembly of section .dynstr:

0000000000400330 <.dynstr>:
  400330:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  400334:	63 2e                	movslq (%rsi),%ebp
  400336:	73 6f                	jae    4003a7 <_init-0x59>
  400338:	2e 36 00 70 72       	cs add %dh,%ss:0x72(%rax)
  40033d:	69 6e 74 66 00 6d 65 	imul   $0x656d0066,0x74(%rsi),%ebp
  400344:	6d                   	insl   (%dx),%es:(%rdi)
  400345:	73 65                	jae    4003ac <_init-0x54>
  400347:	74 00                	je     400349 <_init-0xb7>
  400349:	5f                   	pop    %rdi
  40034a:	5f                   	pop    %rdi
  40034b:	6c                   	insb   (%dx),%es:(%rdi)
  40034c:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400353:	72 74                	jb     4003c9 <_init-0x37>
  400355:	5f                   	pop    %rdi
  400356:	6d                   	insl   (%dx),%es:(%rdi)
  400357:	61                   	(bad)  
  400358:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
  40035f:	43 5f                	rex.XB pop %r15
  400361:	32 2e                	xor    (%rsi),%ch
  400363:	32 2e                	xor    (%rsi),%ch
  400365:	35 00 5f 5f 67       	xor    $0x675f5f00,%eax
  40036a:	6d                   	insl   (%dx),%es:(%rdi)
  40036b:	6f                   	outsl  %ds:(%rsi),(%dx)
  40036c:	6e                   	outsb  %ds:(%rsi),(%dx)
  40036d:	5f                   	pop    %rdi
  40036e:	73 74                	jae    4003e4 <_init-0x1c>
  400370:	61                   	(bad)  
  400371:	72 74                	jb     4003e7 <_init-0x19>
  400373:	5f                   	pop    %rdi
  400374:	5f                   	pop    %rdi
	...

Disassembly of section .gnu.version:

0000000000400376 <.gnu.version>:
  400376:	00 00                	add    %al,(%rax)
  400378:	02 00                	add    (%rax),%al
  40037a:	02 00                	add    (%rax),%al
  40037c:	02 00                	add    (%rax),%al
	...

Disassembly of section .gnu.version_r:

0000000000400380 <.gnu.version_r>:
  400380:	01 00                	add    %eax,(%rax)
  400382:	01 00                	add    %eax,(%rax)
  400384:	01 00                	add    %eax,(%rax)
  400386:	00 00                	add    %al,(%rax)
  400388:	10 00                	adc    %al,(%rax)
  40038a:	00 00                	add    %al,(%rax)
  40038c:	00 00                	add    %al,(%rax)
  40038e:	00 00                	add    %al,(%rax)
  400390:	75 1a                	jne    4003ac <_init-0x54>
  400392:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400398:	2b 00                	sub    (%rax),%eax
  40039a:	00 00                	add    %al,(%rax)
  40039c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000004003a0 <.rela.dyn>:
  4003a0:	f0 0f 60 00          	lock punpcklbw (%rax),%mm0
  4003a4:	00 00                	add    %al,(%rax)
  4003a6:	00 00                	add    %al,(%rax)
  4003a8:	06                   	(bad)  
  4003a9:	00 00                	add    %al,(%rax)
  4003ab:	00 03                	add    %al,(%rbx)
	...
  4003b5:	00 00                	add    %al,(%rax)
  4003b7:	00 f8                	add    %bh,%al
  4003b9:	0f 60 00             	punpcklbw (%rax),%mm0
  4003bc:	00 00                	add    %al,(%rax)
  4003be:	00 00                	add    %al,(%rax)
  4003c0:	06                   	(bad)  
  4003c1:	00 00                	add    %al,(%rax)
  4003c3:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Disassembly of section .rela.plt:

00000000004003d0 <.rela.plt>:
  4003d0:	18 10                	sbb    %dl,(%rax)
  4003d2:	60                   	(bad)  
  4003d3:	00 00                	add    %al,(%rax)
  4003d5:	00 00                	add    %al,(%rax)
  4003d7:	00 07                	add    %al,(%rdi)
  4003d9:	00 00                	add    %al,(%rax)
  4003db:	00 01                	add    %al,(%rcx)
	...
  4003e5:	00 00                	add    %al,(%rax)
  4003e7:	00 20                	add    %ah,(%rax)
  4003e9:	10 60 00             	adc    %ah,0x0(%rax)
  4003ec:	00 00                	add    %al,(%rax)
  4003ee:	00 00                	add    %al,(%rax)
  4003f0:	07                   	(bad)  
  4003f1:	00 00                	add    %al,(%rax)
  4003f3:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .init:

0000000000400400 <_init>:
  400400:	48 83 ec 08          	sub    $0x8,%rsp
  400404:	48 8b 05 ed 0b 20 00 	mov    0x200bed(%rip),%rax        # 600ff8 <__gmon_start__>
  40040b:	48 85 c0             	test   %rax,%rax
  40040e:	74 02                	je     400412 <_init+0x12>
  400410:	ff d0                	callq  *%rax
  400412:	48 83 c4 08          	add    $0x8,%rsp
  400416:	c3                   	retq   

Disassembly of section .plt:

0000000000400420 <.plt>:
  400420:	ff 35 e2 0b 20 00    	pushq  0x200be2(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400426:	ff 25 e4 0b 20 00    	jmpq   *0x200be4(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40042c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400430 <printf@plt>:
  400430:	ff 25 e2 0b 20 00    	jmpq   *0x200be2(%rip)        # 601018 <printf@GLIBC_2.2.5>
  400436:	68 00 00 00 00       	pushq  $0x0
  40043b:	e9 e0 ff ff ff       	jmpq   400420 <.plt>

0000000000400440 <memset@plt>:
  400440:	ff 25 da 0b 20 00    	jmpq   *0x200bda(%rip)        # 601020 <memset@GLIBC_2.2.5>
  400446:	68 01 00 00 00       	pushq  $0x1
  40044b:	e9 d0 ff ff ff       	jmpq   400420 <.plt>

Disassembly of section .text:

0000000000400450 <_start>:
  400450:	31 ed                	xor    %ebp,%ebp
  400452:	49 89 d1             	mov    %rdx,%r9
  400455:	5e                   	pop    %rsi
  400456:	48 89 e2             	mov    %rsp,%rdx
  400459:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40045d:	50                   	push   %rax
  40045e:	54                   	push   %rsp
  40045f:	49 c7 c0 60 07 40 00 	mov    $0x400760,%r8
  400466:	48 c7 c1 f0 06 40 00 	mov    $0x4006f0,%rcx
  40046d:	48 c7 c7 40 05 40 00 	mov    $0x400540,%rdi
  400474:	ff 15 76 0b 20 00    	callq  *0x200b76(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  40047a:	f4                   	hlt    
  40047b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400480 <_dl_relocate_static_pie>:
  400480:	f3 c3                	repz retq 
  400482:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400489:	00 00 00 
  40048c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400490 <deregister_tm_clones>:
  400490:	55                   	push   %rbp
  400491:	b8 40 10 60 00       	mov    $0x601040,%eax
  400496:	48 3d 40 10 60 00    	cmp    $0x601040,%rax
  40049c:	48 89 e5             	mov    %rsp,%rbp
  40049f:	74 17                	je     4004b8 <deregister_tm_clones+0x28>
  4004a1:	b8 00 00 00 00       	mov    $0x0,%eax
  4004a6:	48 85 c0             	test   %rax,%rax
  4004a9:	74 0d                	je     4004b8 <deregister_tm_clones+0x28>
  4004ab:	5d                   	pop    %rbp
  4004ac:	bf 40 10 60 00       	mov    $0x601040,%edi
  4004b1:	ff e0                	jmpq   *%rax
  4004b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4004b8:	5d                   	pop    %rbp
  4004b9:	c3                   	retq   
  4004ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004c0 <register_tm_clones>:
  4004c0:	be 40 10 60 00       	mov    $0x601040,%esi
  4004c5:	55                   	push   %rbp
  4004c6:	48 81 ee 40 10 60 00 	sub    $0x601040,%rsi
  4004cd:	48 89 e5             	mov    %rsp,%rbp
  4004d0:	48 c1 fe 03          	sar    $0x3,%rsi
  4004d4:	48 89 f0             	mov    %rsi,%rax
  4004d7:	48 c1 e8 3f          	shr    $0x3f,%rax
  4004db:	48 01 c6             	add    %rax,%rsi
  4004de:	48 d1 fe             	sar    %rsi
  4004e1:	74 15                	je     4004f8 <register_tm_clones+0x38>
  4004e3:	b8 00 00 00 00       	mov    $0x0,%eax
  4004e8:	48 85 c0             	test   %rax,%rax
  4004eb:	74 0b                	je     4004f8 <register_tm_clones+0x38>
  4004ed:	5d                   	pop    %rbp
  4004ee:	bf 40 10 60 00       	mov    $0x601040,%edi
  4004f3:	ff e0                	jmpq   *%rax
  4004f5:	0f 1f 00             	nopl   (%rax)
  4004f8:	5d                   	pop    %rbp
  4004f9:	c3                   	retq   
  4004fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400500 <__do_global_dtors_aux>:
  400500:	80 3d 39 0b 20 00 00 	cmpb   $0x0,0x200b39(%rip)        # 601040 <__TMC_END__>
  400507:	75 17                	jne    400520 <__do_global_dtors_aux+0x20>
  400509:	55                   	push   %rbp
  40050a:	48 89 e5             	mov    %rsp,%rbp
  40050d:	e8 7e ff ff ff       	callq  400490 <deregister_tm_clones>
  400512:	c6 05 27 0b 20 00 01 	movb   $0x1,0x200b27(%rip)        # 601040 <__TMC_END__>
  400519:	5d                   	pop    %rbp
  40051a:	c3                   	retq   
  40051b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400520:	f3 c3                	repz retq 
  400522:	0f 1f 40 00          	nopl   0x0(%rax)
  400526:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40052d:	00 00 00 

0000000000400530 <frame_dummy>:
  400530:	55                   	push   %rbp
  400531:	48 89 e5             	mov    %rsp,%rbp
  400534:	5d                   	pop    %rbp
  400535:	eb 89                	jmp    4004c0 <register_tm_clones>
  400537:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40053e:	00 00 

0000000000400540 <main>:
  400540:	55                   	push   %rbp
  400541:	48 89 e5             	mov    %rsp,%rbp
  400544:	48 81 ec 30 01 00 00 	sub    $0x130,%rsp
  40054b:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
  400552:	31 f6                	xor    %esi,%esi
  400554:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40055b:	48 b9 3a ac 58 be 22 	movabs $0x1d381f22be58ac3a,%rcx
  400562:	1f 38 1d 
  400565:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  400569:	48 89 c1             	mov    %rax,%rcx
  40056c:	48 89 cf             	mov    %rcx,%rdi
  40056f:	ba 00 01 00 00       	mov    $0x100,%edx
  400574:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  40057b:	e8 c0 fe ff ff       	callq  400440 <memset@plt>
  400580:	48 b8 40 db 6a 1c 59 	movabs $0x9a9d3591c6adb40,%rax
  400587:	d3 a9 09 
  40058a:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  400591:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  400595:	48 8b bd d8 fe ff ff 	mov    -0x128(%rbp),%rdi
  40059c:	e8 9f 00 00 00       	callq  400640 <encrypt>
  4005a1:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  4005a8:	c7 85 e4 fe ff ff 00 	movl   $0x0,-0x11c(%rbp)
  4005af:	00 00 00 
  4005b2:	83 bd e4 fe ff ff 0a 	cmpl   $0xa,-0x11c(%rbp)
  4005b9:	0f 8d 51 00 00 00    	jge    400610 <main+0xd0>
  4005bf:	48 8b 04 25 38 10 60 	mov    0x601038,%rax
  4005c6:	00 
  4005c7:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
  4005ce:	48 81 e1 3f 00 00 00 	and    $0x3f,%rcx
  4005d5:	0f be 34 08          	movsbl (%rax,%rcx,1),%esi
  4005d9:	48 bf b5 07 40 00 00 	movabs $0x4007b5,%rdi
  4005e0:	00 00 00 
  4005e3:	b0 00                	mov    $0x0,%al
  4005e5:	e8 46 fe ff ff       	callq  400430 <printf@plt>
  4005ea:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
  4005f1:	48 c1 e9 06          	shr    $0x6,%rcx
  4005f5:	48 89 8d e8 fe ff ff 	mov    %rcx,-0x118(%rbp)
  4005fc:	8b 85 e4 fe ff ff    	mov    -0x11c(%rbp),%eax
  400602:	83 c0 01             	add    $0x1,%eax
  400605:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%rbp)
  40060b:	e9 a2 ff ff ff       	jmpq   4005b2 <main+0x72>
  400610:	48 bf b8 07 40 00 00 	movabs $0x4007b8,%rdi
  400617:	00 00 00 
  40061a:	b0 00                	mov    $0x0,%al
  40061c:	e8 0f fe ff ff       	callq  400430 <printf@plt>
  400621:	31 c9                	xor    %ecx,%ecx
  400623:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%rbp)
  400629:	89 c8                	mov    %ecx,%eax
  40062b:	48 81 c4 30 01 00 00 	add    $0x130,%rsp
  400632:	5d                   	pop    %rbp
  400633:	c3                   	retq   
  400634:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40063b:	00 00 00 
  40063e:	66 90                	xchg   %ax,%ax

0000000000400640 <encrypt>:
  400640:	55                   	push   %rbp
  400641:	48 89 e5             	mov    %rsp,%rbp
  400644:	48 83 ec 20          	sub    $0x20,%rsp
  400648:	49 89 e1             	mov    %rsp,%r9
  40064b:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
  400652:	49 c1 f9 3f          	sar    $0x3f,%r9
  400656:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
  40065d:	00 
  40065e:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
  400662:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  400669:	00 
  40066a:	48 8b 07             	mov    (%rdi),%rax
  40066d:	4c 09 c8             	or     %r9,%rax
  400670:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400674:	b9 1f 00 00 00       	mov    $0x1f,%ecx
  400679:	31 c0                	xor    %eax,%eax
  40067b:	e9 26 00 00 00       	jmpq   4006a6 <encrypt+0x66>
  400680:	4d 0f 43 c8          	cmovae %r8,%r9
  400684:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  400688:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40068c:	ba 01 00 00 00       	mov    $0x1,%edx
  400691:	d3 e2                	shl    %cl,%edx
  400693:	21 f2                	and    %esi,%edx
  400695:	48 33 55 f0          	xor    -0x10(%rbp),%rdx
  400699:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  40069d:	48 89 14 c7          	mov    %rdx,(%rdi,%rax,8)
  4006a1:	48 ff c0             	inc    %rax
  4006a4:	ff c9                	dec    %ecx
  4006a6:	83 f8 1e             	cmp    $0x1e,%eax
  4006a9:	77 14                	ja     4006bf <encrypt+0x7f>
  4006ab:	4d 0f 47 c8          	cmova  %r8,%r9
  4006af:	83 f8 20             	cmp    $0x20,%eax
  4006b2:	ba 01 00 00 00       	mov    $0x1,%edx
  4006b7:	72 c7                	jb     400680 <encrypt+0x40>
  4006b9:	4d 0f 42 c8          	cmovb  %r8,%r9
  4006bd:	eb c9                	jmp    400688 <encrypt+0x48>
  4006bf:	4d 0f 46 c8          	cmovbe %r8,%r9
  4006c3:	48 89 e1             	mov    %rsp,%rcx
  4006c6:	48 8d 61 f0          	lea    -0x10(%rcx),%rsp
  4006ca:	48 c7 41 f0 1f 00 00 	movq   $0x1f,-0x10(%rcx)
  4006d1:	00 
  4006d2:	0f ae e8             	lfence 
  4006d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4006d9:	48 03 41 f0          	add    -0x10(%rcx),%rax
  4006dd:	49 c1 e1 2f          	shl    $0x2f,%r9
  4006e1:	4c 09 cc             	or     %r9,%rsp
  4006e4:	48 89 ec             	mov    %rbp,%rsp
  4006e7:	5d                   	pop    %rbp
  4006e8:	c3                   	retq   
  4006e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004006f0 <__libc_csu_init>:
  4006f0:	41 57                	push   %r15
  4006f2:	41 56                	push   %r14
  4006f4:	49 89 d7             	mov    %rdx,%r15
  4006f7:	41 55                	push   %r13
  4006f9:	41 54                	push   %r12
  4006fb:	4c 8d 25 0e 07 20 00 	lea    0x20070e(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400702:	55                   	push   %rbp
  400703:	48 8d 2d 0e 07 20 00 	lea    0x20070e(%rip),%rbp        # 600e18 <__init_array_end>
  40070a:	53                   	push   %rbx
  40070b:	41 89 fd             	mov    %edi,%r13d
  40070e:	49 89 f6             	mov    %rsi,%r14
  400711:	4c 29 e5             	sub    %r12,%rbp
  400714:	48 83 ec 08          	sub    $0x8,%rsp
  400718:	48 c1 fd 03          	sar    $0x3,%rbp
  40071c:	e8 df fc ff ff       	callq  400400 <_init>
  400721:	48 85 ed             	test   %rbp,%rbp
  400724:	74 20                	je     400746 <__libc_csu_init+0x56>
  400726:	31 db                	xor    %ebx,%ebx
  400728:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40072f:	00 
  400730:	4c 89 fa             	mov    %r15,%rdx
  400733:	4c 89 f6             	mov    %r14,%rsi
  400736:	44 89 ef             	mov    %r13d,%edi
  400739:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40073d:	48 83 c3 01          	add    $0x1,%rbx
  400741:	48 39 dd             	cmp    %rbx,%rbp
  400744:	75 ea                	jne    400730 <__libc_csu_init+0x40>
  400746:	48 83 c4 08          	add    $0x8,%rsp
  40074a:	5b                   	pop    %rbx
  40074b:	5d                   	pop    %rbp
  40074c:	41 5c                	pop    %r12
  40074e:	41 5d                	pop    %r13
  400750:	41 5e                	pop    %r14
  400752:	41 5f                	pop    %r15
  400754:	c3                   	retq   
  400755:	90                   	nop
  400756:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40075d:	00 00 00 

0000000000400760 <__libc_csu_fini>:
  400760:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400764 <_fini>:
  400764:	48 83 ec 08          	sub    $0x8,%rsp
  400768:	48 83 c4 08          	add    $0x8,%rsp
  40076c:	c3                   	retq   

Disassembly of section .rodata:

0000000000400770 <_IO_stdin_used>:
  400770:	01 00                	add    %eax,(%rax)
  400772:	02 00                	add    (%rax),%al
  400774:	41                   	rex.B
  400775:	42                   	rex.X
  400776:	43                   	rex.XB
  400777:	44                   	rex.R
  400778:	45                   	rex.RB
  400779:	46                   	rex.RX
  40077a:	47                   	rex.RXB
  40077b:	48                   	rex.W
  40077c:	49                   	rex.WB
  40077d:	4a                   	rex.WX
  40077e:	4b                   	rex.WXB
  40077f:	4c                   	rex.WR
  400780:	4d                   	rex.WRB
  400781:	4e                   	rex.WRX
  400782:	4f 50                	rex.WRXB push %r8
  400784:	51                   	push   %rcx
  400785:	52                   	push   %rdx
  400786:	53                   	push   %rbx
  400787:	54                   	push   %rsp
  400788:	55                   	push   %rbp
  400789:	56                   	push   %rsi
  40078a:	57                   	push   %rdi
  40078b:	58                   	pop    %rax
  40078c:	59                   	pop    %rcx
  40078d:	5a                   	pop    %rdx
  40078e:	61                   	(bad)  
  40078f:	62 63 64 65 66       	(bad)  {%k5}
  400794:	67 68 69 6a 6b 6c    	addr32 pushq $0x6c6b6a69
  40079a:	6d                   	insl   (%dx),%es:(%rdi)
  40079b:	6e                   	outsb  %ds:(%rsi),(%dx)
  40079c:	6f                   	outsl  %ds:(%rsi),(%dx)
  40079d:	70 71                	jo     400810 <__GNU_EH_FRAME_HDR+0x54>
  40079f:	72 73                	jb     400814 <__GNU_EH_FRAME_HDR+0x58>
  4007a1:	74 75                	je     400818 <__GNU_EH_FRAME_HDR+0x5c>
  4007a3:	76 77                	jbe    40081c <__GNU_EH_FRAME_HDR+0x60>
  4007a5:	78 79                	js     400820 <__GNU_EH_FRAME_HDR+0x64>
  4007a7:	7a 30                	jp     4007d9 <__GNU_EH_FRAME_HDR+0x1d>
  4007a9:	31 32                	xor    %esi,(%rdx)
  4007ab:	33 34 35 36 37 38 39 	xor    0x39383736(,%rsi,1),%esi
  4007b2:	2b 2f                	sub    (%rdi),%ebp
  4007b4:	00 25 63 00 0a 00    	add    %ah,0xa0063(%rip)        # 4a081d <__FRAME_END__+0x9ff01>

Disassembly of section .eh_frame_hdr:

00000000004007bc <__GNU_EH_FRAME_HDR>:
  4007bc:	01 1b                	add    %ebx,(%rbx)
  4007be:	03 3b                	add    (%rbx),%edi
  4007c0:	40 00 00             	add    %al,(%rax)
  4007c3:	00 07                	add    %al,(%rdi)
  4007c5:	00 00                	add    %al,(%rax)
  4007c7:	00 64 fc ff          	add    %ah,-0x1(%rsp,%rdi,8)
  4007cb:	ff 9c 00 00 00 94 fc 	lcall  *-0x36c0000(%rax,%rax,1)
  4007d2:	ff                   	(bad)  
  4007d3:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
  4007d7:	00 c4                	add    %al,%ah
  4007d9:	fc                   	cld    
  4007da:	ff                   	(bad)  
  4007db:	ff 88 00 00 00 84    	decl   -0x7c000000(%rax)
  4007e1:	fd                   	std    
  4007e2:	ff                   	(bad)  
  4007e3:	ff c4                	inc    %esp
  4007e5:	00 00                	add    %al,(%rax)
  4007e7:	00 84 fe ff ff e4 00 	add    %al,0xe4ffff(%rsi,%rdi,8)
  4007ee:	00 00                	add    %al,(%rax)
  4007f0:	34 ff                	xor    $0xff,%al
  4007f2:	ff                   	(bad)  
  4007f3:	ff 04 01             	incl   (%rcx,%rax,1)
  4007f6:	00 00                	add    %al,(%rax)
  4007f8:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
  4007f9:	ff                   	(bad)  
  4007fa:	ff                   	(bad)  
  4007fb:	ff 4c 01 00          	decl   0x0(%rcx,%rax,1)
	...

Disassembly of section .eh_frame:

0000000000400800 <__FRAME_END__-0x11c>:
  400800:	14 00                	adc    $0x0,%al
  400802:	00 00                	add    %al,(%rax)
  400804:	00 00                	add    %al,(%rax)
  400806:	00 00                	add    %al,(%rax)
  400808:	01 7a 52             	add    %edi,0x52(%rdx)
  40080b:	00 01                	add    %al,(%rcx)
  40080d:	78 10                	js     40081f <__GNU_EH_FRAME_HDR+0x63>
  40080f:	01 1b                	add    %ebx,(%rbx)
  400811:	0c 07                	or     $0x7,%al
  400813:	08 90 01 07 10 10    	or     %dl,0x10100701(%rax)
  400819:	00 00                	add    %al,(%rax)
  40081b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  40081e:	00 00                	add    %al,(%rax)
  400820:	30 fc                	xor    %bh,%ah
  400822:	ff                   	(bad)  
  400823:	ff 2b                	ljmp   *(%rbx)
  400825:	00 00                	add    %al,(%rax)
  400827:	00 00                	add    %al,(%rax)
  400829:	00 00                	add    %al,(%rax)
  40082b:	00 14 00             	add    %dl,(%rax,%rax,1)
  40082e:	00 00                	add    %al,(%rax)
  400830:	00 00                	add    %al,(%rax)
  400832:	00 00                	add    %al,(%rax)
  400834:	01 7a 52             	add    %edi,0x52(%rdx)
  400837:	00 01                	add    %al,(%rcx)
  400839:	78 10                	js     40084b <__GNU_EH_FRAME_HDR+0x8f>
  40083b:	01 1b                	add    %ebx,(%rbx)
  40083d:	0c 07                	or     $0x7,%al
  40083f:	08 90 01 00 00 10    	or     %dl,0x10000001(%rax)
  400845:	00 00                	add    %al,(%rax)
  400847:	00 1c 00             	add    %bl,(%rax,%rax,1)
  40084a:	00 00                	add    %al,(%rax)
  40084c:	34 fc                	xor    $0xfc,%al
  40084e:	ff                   	(bad)  
  40084f:	ff 02                	incl   (%rdx)
  400851:	00 00                	add    %al,(%rax)
  400853:	00 00                	add    %al,(%rax)
  400855:	00 00                	add    %al,(%rax)
  400857:	00 24 00             	add    %ah,(%rax,%rax,1)
  40085a:	00 00                	add    %al,(%rax)
  40085c:	30 00                	xor    %al,(%rax)
  40085e:	00 00                	add    %al,(%rax)
  400860:	c0 fb ff             	sar    $0xff,%bl
  400863:	ff 30                	pushq  (%rax)
  400865:	00 00                	add    %al,(%rax)
  400867:	00 00                	add    %al,(%rax)
  400869:	0e                   	(bad)  
  40086a:	10 46 0e             	adc    %al,0xe(%rsi)
  40086d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  400870:	0b 77 08             	or     0x8(%rdi),%esi
  400873:	80 00 3f             	addb   $0x3f,(%rax)
  400876:	1a 3b                	sbb    (%rbx),%bh
  400878:	2a 33                	sub    (%rbx),%dh
  40087a:	24 22                	and    $0x22,%al
  40087c:	00 00                	add    %al,(%rax)
  40087e:	00 00                	add    %al,(%rax)
  400880:	1c 00                	sbb    $0x0,%al
  400882:	00 00                	add    %al,(%rax)
  400884:	58                   	pop    %rax
  400885:	00 00                	add    %al,(%rax)
  400887:	00 b8 fc ff ff f4    	add    %bh,-0xb000004(%rax)
  40088d:	00 00                	add    %al,(%rax)
  40088f:	00 00                	add    %al,(%rax)
  400891:	41 0e                	rex.B (bad) 
  400893:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400899:	02 ef                	add    %bh,%ch
  40089b:	0c 07                	or     $0x7,%al
  40089d:	08 00                	or     %al,(%rax)
  40089f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4008a2:	00 00                	add    %al,(%rax)
  4008a4:	78 00                	js     4008a6 <__GNU_EH_FRAME_HDR+0xea>
  4008a6:	00 00                	add    %al,(%rax)
  4008a8:	98                   	cwtl   
  4008a9:	fd                   	std    
  4008aa:	ff                   	(bad)  
  4008ab:	ff a9 00 00 00 00    	ljmp   *0x0(%rcx)
  4008b1:	41 0e                	rex.B (bad) 
  4008b3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4008b9:	02 a4 0c 07 08 00 00 	add    0x807(%rsp,%rcx,1),%ah
  4008c0:	44 00 00             	add    %r8b,(%rax)
  4008c3:	00 98 00 00 00 28    	add    %bl,0x28000000(%rax)
  4008c9:	fe                   	(bad)  
  4008ca:	ff                   	(bad)  
  4008cb:	ff 65 00             	jmpq   *0x0(%rbp)
  4008ce:	00 00                	add    %al,(%rax)
  4008d0:	00 42 0e             	add    %al,0xe(%rdx)
  4008d3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
  4008d9:	8e 03                	mov    (%rbx),%es
  4008db:	45 0e                	rex.RB (bad) 
  4008dd:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
  4008e3:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86701731 <_end+0xffffffff861006e1>
  4008e9:	06                   	(bad)  
  4008ea:	48 0e                	rex.W (bad) 
  4008ec:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  4008f2:	72 0e                	jb     400902 <__GNU_EH_FRAME_HDR+0x146>
  4008f4:	38 41 0e             	cmp    %al,0xe(%rcx)
  4008f7:	30 41 0e             	xor    %al,0xe(%rcx)
  4008fa:	28 42 0e             	sub    %al,0xe(%rdx)
  4008fd:	20 42 0e             	and    %al,0xe(%rdx)
  400900:	18 42 0e             	sbb    %al,0xe(%rdx)
  400903:	10 42 0e             	adc    %al,0xe(%rdx)
  400906:	08 00                	or     %al,(%rax)
  400908:	10 00                	adc    %al,(%rax)
  40090a:	00 00                	add    %al,(%rax)
  40090c:	e0 00                	loopne 40090e <__GNU_EH_FRAME_HDR+0x152>
  40090e:	00 00                	add    %al,(%rax)
  400910:	50                   	push   %rax
  400911:	fe                   	(bad)  
  400912:	ff                   	(bad)  
  400913:	ff 02                	incl   (%rdx)
  400915:	00 00                	add    %al,(%rax)
  400917:	00 00                	add    %al,(%rax)
  400919:	00 00                	add    %al,(%rax)
	...

000000000040091c <__FRAME_END__>:
  40091c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	30 05 40 00 00 00    	xor    %al,0x40(%rip)        # 600e56 <_DYNAMIC+0x36>
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	00 05 40 00 00 00    	add    %al,0x40(%rip)        # 600e5e <_DYNAMIC+0x3e>
	...

Disassembly of section .dynamic:

0000000000600e20 <_DYNAMIC>:
  600e20:	01 00                	add    %eax,(%rax)
  600e22:	00 00                	add    %al,(%rax)
  600e24:	00 00                	add    %al,(%rax)
  600e26:	00 00                	add    %al,(%rax)
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	0c 00                	or     $0x0,%al
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	00 04 40             	add    %al,(%rax,%rax,2)
  600e3b:	00 00                	add    %al,(%rax)
  600e3d:	00 00                	add    %al,(%rax)
  600e3f:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 600e45 <_DYNAMIC+0x25>
  600e45:	00 00                	add    %al,(%rax)
  600e47:	00 64 07 40          	add    %ah,0x40(%rdi,%rax,1)
  600e4b:	00 00                	add    %al,(%rax)
  600e4d:	00 00                	add    %al,(%rax)
  600e4f:	00 19                	add    %bl,(%rcx)
  600e51:	00 00                	add    %al,(%rax)
  600e53:	00 00                	add    %al,(%rax)
  600e55:	00 00                	add    %al,(%rax)
  600e57:	00 10                	add    %dl,(%rax)
  600e59:	0e                   	(bad)  
  600e5a:	60                   	(bad)  
  600e5b:	00 00                	add    %al,(%rax)
  600e5d:	00 00                	add    %al,(%rax)
  600e5f:	00 1b                	add    %bl,(%rbx)
  600e61:	00 00                	add    %al,(%rax)
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 08                	add    %cl,(%rax)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 1a                	add    %bl,(%rdx)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 18                	add    %bl,(%rax)
  600e79:	0e                   	(bad)  
  600e7a:	60                   	(bad)  
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e82:	00 00                	add    %al,(%rax)
  600e84:	00 00                	add    %al,(%rax)
  600e86:	00 00                	add    %al,(%rax)
  600e88:	08 00                	or     %al,(%rax)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	f5                   	cmc    
  600e91:	fe                   	(bad)  
  600e92:	ff 6f 00             	ljmp   *0x0(%rdi)
  600e95:	00 00                	add    %al,(%rax)
  600e97:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ea5 <_DYNAMIC+0x85>
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 30                	add    %dh,(%rax)
  600ea9:	03 40 00             	add    0x0(%rax),%eax
  600eac:	00 00                	add    %al,(%rax)
  600eae:	00 00                	add    %al,(%rax)
  600eb0:	06                   	(bad)  
  600eb1:	00 00                	add    %al,(%rax)
  600eb3:	00 00                	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 0a                	add    %cl,(%rdx)
  600ec1:	00 00                	add    %al,(%rax)
  600ec3:	00 00                	add    %al,(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 46 00             	add    %al,0x0(%rsi)
  600eca:	00 00                	add    %al,(%rax)
  600ecc:	00 00                	add    %al,(%rax)
  600ece:	00 00                	add    %al,(%rax)
  600ed0:	0b 00                	or     (%rax),%eax
  600ed2:	00 00                	add    %al,(%rax)
  600ed4:	00 00                	add    %al,(%rax)
  600ed6:	00 00                	add    %al,(%rax)
  600ed8:	18 00                	sbb    %al,(%rax)
  600eda:	00 00                	add    %al,(%rax)
  600edc:	00 00                	add    %al,(%rax)
  600ede:	00 00                	add    %al,(%rax)
  600ee0:	15 00 00 00 00       	adc    $0x0,%eax
	...
  600eed:	00 00                	add    %al,(%rax)
  600eef:	00 03                	add    %al,(%rbx)
	...
  600ef9:	10 60 00             	adc    %ah,0x0(%rax)
  600efc:	00 00                	add    %al,(%rax)
  600efe:	00 00                	add    %al,(%rax)
  600f00:	02 00                	add    (%rax),%al
  600f02:	00 00                	add    %al,(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	30 00                	xor    %al,(%rax)
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	14 00                	adc    $0x0,%al
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	07                   	(bad)  
  600f19:	00 00                	add    %al,(%rax)
  600f1b:	00 00                	add    %al,(%rax)
  600f1d:	00 00                	add    %al,(%rax)
  600f1f:	00 17                	add    %dl,(%rdi)
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 d0                	add    %dl,%al
  600f29:	03 40 00             	add    0x0(%rax),%eax
  600f2c:	00 00                	add    %al,(%rax)
  600f2e:	00 00                	add    %al,(%rax)
  600f30:	07                   	(bad)  
  600f31:	00 00                	add    %al,(%rax)
  600f33:	00 00                	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 a0 03 40 00 00    	add    %ah,0x4003(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 08                	add    %cl,(%rax)
  600f41:	00 00                	add    %al,(%rax)
  600f43:	00 00                	add    %al,(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 30                	add    %dh,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 09                	add    %cl,(%rcx)
  600f51:	00 00                	add    %al,(%rax)
  600f53:	00 00                	add    %al,(%rax)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 18                	add    %bl,(%rax)
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 fe                	add    %bh,%dh
  600f61:	ff                   	(bad)  
  600f62:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 80 03 40 00 00    	add    %al,0x4003(%rax)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 ff                	add    %bh,%bh
  600f71:	ff                   	(bad)  
  600f72:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 01                	add    %al,(%rcx)
  600f79:	00 00                	add    %al,(%rax)
  600f7b:	00 00                	add    %al,(%rax)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 f0                	add    %dh,%al
  600f81:	ff                   	(bad)  
  600f82:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 76 03             	add    %dh,0x3(%rsi)
  600f8a:	40 00 00             	add    %al,(%rax)
	...

Disassembly of section .got:

0000000000600ff0 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	20 0e                	and    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 36                	add    %dh,(%rsi)
  601019:	04 40                	add    $0x40,%al
  60101b:	00 00                	add    %al,(%rax)
  60101d:	00 00                	add    %al,(%rax)
  60101f:	00 46 04             	add    %al,0x4(%rsi)
  601022:	40 00 00             	add    %al,(%rax)
  601025:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601028 <__data_start>:
	...

0000000000601030 <__dso_handle>:
	...

0000000000601038 <base64>:
  601038:	74 07                	je     601041 <__TMC_END__+0x1>
  60103a:	40 00 00             	add    %al,(%rax)
  60103d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000601040 <__bss_start>:
	...

0000000000601048 <ms_flag>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x400388>
   a:	74 75                	je     81 <_init-0x40037f>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 35 2e 30 2d 33    	cs xor $0x332d302e,%eax
  14:	75 62                	jne    78 <_init-0x400388>
  16:	75 6e                	jne    86 <_init-0x40037a>
  18:	74 75                	je     8f <_init-0x400371>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  22:	20 37                	and    %dh,(%rdi)
  24:	2e 35 2e 30 00 55    	cs xor $0x5500302e,%eax
  2a:	62                   	(bad)  
  2b:	75 6e                	jne    9b <_init-0x400365>
  2d:	74 75                	je     a4 <_init-0x40035c>
  2f:	20 63 6c             	and    %ah,0x6c(%rbx)
  32:	61                   	(bad)  
  33:	6e                   	outsb  %ds:(%rsi),(%dx)
  34:	67 20 76 65          	and    %dh,0x65(%esi)
  38:	72 73                	jb     ad <_init-0x400353>
  3a:	69 6f 6e 20 31 31 2e 	imul   $0x2e313120,0x6e(%rdi),%ebp
  41:	31 2e                	xor    %ebp,(%rsi)
  43:	30 2d 2b 2b 32 30    	xor    %ch,0x30322b2b(%rip)        # 30322b74 <_end+0x2fd21b24>
  49:	32 31                	xor    (%rcx),%dh
  4b:	30 38                	xor    %bh,(%rax)
  4d:	30 36                	xor    %dh,(%rsi)
  4f:	30 39                	xor    %bh,(%rcx)
  51:	31 34 31             	xor    %esi,(%rcx,%rsi,1)
  54:	37                   	(bad)  
  55:	2b 31                	sub    (%rcx),%esi
  57:	66 64 65 63 35 39 62 	fs movslq %gs:0x66666239(%rip),%si        # 66666299 <_end+0x66065249>
  5e:	66 66 
  60:	63 31                	movslq (%rcx),%esi
  62:	2d 31 7e 65 78       	sub    $0x78657e31,%eax
  67:	70 31                	jo     9a <_init-0x400366>
  69:	7e 32                	jle    9d <_init-0x400363>
  6b:	30 32                	xor    %dh,(%rdx)
  6d:	31 30                	xor    %esi,(%rax)
  6f:	38 30                	cmp    %dh,(%rax)
  71:	36 30 37             	xor    %dh,%ss:(%rdi)
  74:	32 30                	xor    (%rax),%dh
  76:	34 30                	xor    $0x30,%al
  78:	2e 31 36             	xor    %esi,%cs:(%rsi)
  7b:	37                   	(bad)  
	...
