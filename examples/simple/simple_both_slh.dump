
final:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x153>
  400248:	78 38                	js     400282 <_init-0x146>
  40024a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 03                	add    %al,(%rbx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 02                	add    %al,(%rdx)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 00                	add    %al,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 02                	add    %al,(%rdx)
  400285:	5b                   	pop    %rbx
  400286:	2f                   	(bad)  
  400287:	6f                   	outsl  %ds:(%rsi),(%dx)
  400288:	fd                   	std    
  400289:	79 55                	jns    4002e0 <_init-0xe8>
  40028b:	31 88 d0 36 9a f6    	xor    %ecx,-0x965c930(%rax)
  400291:	e0 b4                	loopne 400247 <_init-0x181>
  400293:	6b c1 07             	imul   $0x7,%ecx,%eax
  400296:	bb                   	.byte 0xbb
  400297:	bc                   	.byte 0xbc

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     (%rax),%eax
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	12 00                	adc    (%rax),%al
  4002ea:	00 00                	add    %al,(%rax)
  4002ec:	12 00                	adc    (%rax),%al
	...
  4002fe:	00 00                	add    %al,(%rax)
  400300:	30 00                	xor    %al,(%rax)
  400302:	00 00                	add    %al,(%rax)
  400304:	20 00                	and    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000400318 <.dynstr>:
  400318:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40031c:	63 2e                	movslq (%rsi),%ebp
  40031e:	73 6f                	jae    40038f <_init-0x39>
  400320:	2e 36 00 70 72       	cs add %dh,%ss:0x72(%rax)
  400325:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
  40032c:	6c                   	insb   (%dx),%es:(%rdi)
  40032d:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400334:	72 74                	jb     4003aa <_init-0x1e>
  400336:	5f                   	pop    %rdi
  400337:	6d                   	insl   (%dx),%es:(%rdi)
  400338:	61                   	(bad)  
  400339:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
  400340:	43 5f                	rex.XB pop %r15
  400342:	32 2e                	xor    (%rsi),%ch
  400344:	32 2e                	xor    (%rsi),%ch
  400346:	35 00 5f 5f 67       	xor    $0x675f5f00,%eax
  40034b:	6d                   	insl   (%dx),%es:(%rdi)
  40034c:	6f                   	outsl  %ds:(%rsi),(%dx)
  40034d:	6e                   	outsb  %ds:(%rsi),(%dx)
  40034e:	5f                   	pop    %rdi
  40034f:	73 74                	jae    4003c5 <_init-0x3>
  400351:	61                   	(bad)  
  400352:	72 74                	jb     4003c8 <_init>
  400354:	5f                   	pop    %rdi
  400355:	5f                   	pop    %rdi
	...

Disassembly of section .gnu.version:

0000000000400358 <.gnu.version>:
  400358:	00 00                	add    %al,(%rax)
  40035a:	02 00                	add    (%rax),%al
  40035c:	02 00                	add    (%rax),%al
	...

Disassembly of section .gnu.version_r:

0000000000400360 <.gnu.version_r>:
  400360:	01 00                	add    %eax,(%rax)
  400362:	01 00                	add    %eax,(%rax)
  400364:	01 00                	add    %eax,(%rax)
  400366:	00 00                	add    %al,(%rax)
  400368:	10 00                	adc    %al,(%rax)
  40036a:	00 00                	add    %al,(%rax)
  40036c:	00 00                	add    %al,(%rax)
  40036e:	00 00                	add    %al,(%rax)
  400370:	75 1a                	jne    40038c <_init-0x3c>
  400372:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400378:	24 00                	and    $0x0,%al
  40037a:	00 00                	add    %al,(%rax)
  40037c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000400380 <.rela.dyn>:
  400380:	f0 0f 60 00          	lock punpcklbw (%rax),%mm0
  400384:	00 00                	add    %al,(%rax)
  400386:	00 00                	add    %al,(%rax)
  400388:	06                   	(bad)  
  400389:	00 00                	add    %al,(%rax)
  40038b:	00 02                	add    %al,(%rdx)
	...
  400395:	00 00                	add    %al,(%rax)
  400397:	00 f8                	add    %bh,%al
  400399:	0f 60 00             	punpcklbw (%rax),%mm0
  40039c:	00 00                	add    %al,(%rax)
  40039e:	00 00                	add    %al,(%rax)
  4003a0:	06                   	(bad)  
  4003a1:	00 00                	add    %al,(%rax)
  4003a3:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .rela.plt:

00000000004003b0 <.rela.plt>:
  4003b0:	18 10                	sbb    %dl,(%rax)
  4003b2:	60                   	(bad)  
  4003b3:	00 00                	add    %al,(%rax)
  4003b5:	00 00                	add    %al,(%rax)
  4003b7:	00 07                	add    %al,(%rdi)
  4003b9:	00 00                	add    %al,(%rax)
  4003bb:	00 01                	add    %al,(%rcx)
	...

Disassembly of section .init:

00000000004003c8 <_init>:
  4003c8:	48 83 ec 08          	sub    $0x8,%rsp
  4003cc:	48 8b 05 25 0c 20 00 	mov    0x200c25(%rip),%rax        # 600ff8 <__gmon_start__>
  4003d3:	48 85 c0             	test   %rax,%rax
  4003d6:	74 02                	je     4003da <_init+0x12>
  4003d8:	ff d0                	callq  *%rax
  4003da:	48 83 c4 08          	add    $0x8,%rsp
  4003de:	c3                   	retq   

Disassembly of section .plt:

00000000004003e0 <.plt>:
  4003e0:	ff 35 22 0c 20 00    	pushq  0x200c22(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003e6:	ff 25 24 0c 20 00    	jmpq   *0x200c24(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003f0 <printf@plt>:
  4003f0:	ff 25 22 0c 20 00    	jmpq   *0x200c22(%rip)        # 601018 <printf@GLIBC_2.2.5>
  4003f6:	68 00 00 00 00       	pushq  $0x0
  4003fb:	e9 e0 ff ff ff       	jmpq   4003e0 <.plt>

Disassembly of section .text:

0000000000400400 <_start>:
  400400:	31 ed                	xor    %ebp,%ebp
  400402:	49 89 d1             	mov    %rdx,%r9
  400405:	5e                   	pop    %rsi
  400406:	48 89 e2             	mov    %rsp,%rdx
  400409:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40040d:	50                   	push   %rax
  40040e:	54                   	push   %rsp
  40040f:	49 c7 c0 a0 07 40 00 	mov    $0x4007a0,%r8
  400416:	48 c7 c1 30 07 40 00 	mov    $0x400730,%rcx
  40041d:	48 c7 c7 20 05 40 00 	mov    $0x400520,%rdi
  400424:	ff 15 c6 0b 20 00    	callq  *0x200bc6(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  40042a:	f4                   	hlt    
  40042b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400430 <_dl_relocate_static_pie>:
  400430:	f3 c3                	repz retq 
  400432:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400439:	00 00 00 
  40043c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400440 <deregister_tm_clones>:
  400440:	55                   	push   %rbp
  400441:	b8 38 10 60 00       	mov    $0x601038,%eax
  400446:	48 3d 38 10 60 00    	cmp    $0x601038,%rax
  40044c:	48 89 e5             	mov    %rsp,%rbp
  40044f:	74 17                	je     400468 <deregister_tm_clones+0x28>
  400451:	b8 00 00 00 00       	mov    $0x0,%eax
  400456:	48 85 c0             	test   %rax,%rax
  400459:	74 0d                	je     400468 <deregister_tm_clones+0x28>
  40045b:	5d                   	pop    %rbp
  40045c:	bf 38 10 60 00       	mov    $0x601038,%edi
  400461:	ff e0                	jmpq   *%rax
  400463:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400468:	5d                   	pop    %rbp
  400469:	c3                   	retq   
  40046a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400470 <register_tm_clones>:
  400470:	be 38 10 60 00       	mov    $0x601038,%esi
  400475:	55                   	push   %rbp
  400476:	48 81 ee 38 10 60 00 	sub    $0x601038,%rsi
  40047d:	48 89 e5             	mov    %rsp,%rbp
  400480:	48 c1 fe 03          	sar    $0x3,%rsi
  400484:	48 89 f0             	mov    %rsi,%rax
  400487:	48 c1 e8 3f          	shr    $0x3f,%rax
  40048b:	48 01 c6             	add    %rax,%rsi
  40048e:	48 d1 fe             	sar    %rsi
  400491:	74 15                	je     4004a8 <register_tm_clones+0x38>
  400493:	b8 00 00 00 00       	mov    $0x0,%eax
  400498:	48 85 c0             	test   %rax,%rax
  40049b:	74 0b                	je     4004a8 <register_tm_clones+0x38>
  40049d:	5d                   	pop    %rbp
  40049e:	bf 38 10 60 00       	mov    $0x601038,%edi
  4004a3:	ff e0                	jmpq   *%rax
  4004a5:	0f 1f 00             	nopl   (%rax)
  4004a8:	5d                   	pop    %rbp
  4004a9:	c3                   	retq   
  4004aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004b0 <__do_global_dtors_aux>:
  4004b0:	80 3d 81 0b 20 00 00 	cmpb   $0x0,0x200b81(%rip)        # 601038 <__TMC_END__>
  4004b7:	75 17                	jne    4004d0 <__do_global_dtors_aux+0x20>
  4004b9:	55                   	push   %rbp
  4004ba:	48 89 e5             	mov    %rsp,%rbp
  4004bd:	e8 7e ff ff ff       	callq  400440 <deregister_tm_clones>
  4004c2:	c6 05 6f 0b 20 00 01 	movb   $0x1,0x200b6f(%rip)        # 601038 <__TMC_END__>
  4004c9:	5d                   	pop    %rbp
  4004ca:	c3                   	retq   
  4004cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4004d0:	f3 c3                	repz retq 
  4004d2:	0f 1f 40 00          	nopl   0x0(%rax)
  4004d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4004dd:	00 00 00 

00000000004004e0 <frame_dummy>:
  4004e0:	55                   	push   %rbp
  4004e1:	48 89 e5             	mov    %rsp,%rbp
  4004e4:	5d                   	pop    %rbp
  4004e5:	eb 89                	jmp    400470 <register_tm_clones>
  4004e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4004ee:	00 00 

00000000004004f0 <secdec>:
  4004f0:	55                   	push   %rbp
  4004f1:	48 89 e5             	mov    %rsp,%rbp
  4004f4:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  4004fb:	48 89 e1             	mov    %rsp,%rcx
  4004fe:	48 c1 f9 3f          	sar    $0x3f,%rcx
  400502:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  400506:	0f ae e8             	lfence 
  400509:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40050d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400511:	48 89 d0             	mov    %rdx,%rax
  400514:	48 c1 e1 2f          	shl    $0x2f,%rcx
  400518:	48 09 cc             	or     %rcx,%rsp
  40051b:	5d                   	pop    %rbp
  40051c:	c3                   	retq   
  40051d:	0f 1f 00             	nopl   (%rax)

0000000000400520 <main>:
  400520:	55                   	push   %rbp
  400521:	48 89 e5             	mov    %rsp,%rbp
  400524:	48 83 ec 60          	sub    $0x60,%rsp
  400528:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  40052f:	48 89 e1             	mov    %rsp,%rcx
  400532:	48 c1 f9 3f          	sar    $0x3f,%rcx
  400536:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40053d:	48 ba 3a ac 58 be 22 	movabs $0x1d381f22be58ac3a,%rdx
  400544:	1f 38 1d 
  400547:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  40054b:	48 ba 40 db 6a 1c 59 	movabs $0x9a9d3591c6adb40,%rdx
  400552:	d3 a9 09 
  400555:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  400559:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  40055d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  400561:	48 c1 e1 2f          	shl    $0x2f,%rcx
  400565:	48 09 cc             	or     %rcx,%rsp
  400568:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40056c:	e8 4f 01 00 00       	callq  4006c0 <encrypt>
  400571:	48 8b 4c 24 f8       	mov    -0x8(%rsp),%rcx
  400576:	48 89 e2             	mov    %rsp,%rdx
  400579:	48 c1 fa 3f          	sar    $0x3f,%rdx
  40057d:	48 81 f9 71 05 40 00 	cmp    $0x400571,%rcx
  400584:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  400588:	48 0f 45 d1          	cmovne %rcx,%rdx
  40058c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  400590:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  400597:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  40059b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40059f:	83 7d e4 0a          	cmpl   $0xa,-0x1c(%rbp)
  4005a3:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  4005a7:	0f 8d 8c 00 00 00    	jge    400639 <main+0x119>
  4005ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4005b1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4005b5:	48 0f 4d c1          	cmovge %rcx,%rax
  4005b9:	48 8b 14 25 30 10 60 	mov    0x601030,%rdx
  4005c0:	00 
  4005c1:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4005c5:	48 81 e6 3f 00 00 00 	and    $0x3f,%rsi
  4005cc:	0f be 3c 32          	movsbl (%rdx,%rsi,1),%edi
  4005d0:	41 89 c0             	mov    %eax,%r8d
  4005d3:	41 09 f8             	or     %edi,%r8d
  4005d6:	bf f5 07 40 00       	mov    $0x4007f5,%edi
  4005db:	45 31 c9             	xor    %r9d,%r9d
  4005de:	44 89 c6             	mov    %r8d,%esi
  4005e1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  4005e5:	44 88 c8             	mov    %r9b,%al
  4005e8:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4005ec:	48 c1 e2 2f          	shl    $0x2f,%rdx
  4005f0:	48 09 d4             	or     %rdx,%rsp
  4005f3:	e8 f8 fd ff ff       	callq  4003f0 <printf@plt>
  4005f8:	48 8b 4c 24 f8       	mov    -0x8(%rsp),%rcx
  4005fd:	48 89 e2             	mov    %rsp,%rdx
  400600:	48 c1 fa 3f          	sar    $0x3f,%rdx
  400604:	48 81 f9 f8 05 40 00 	cmp    $0x4005f8,%rcx
  40060b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40060f:	48 0f 45 d1          	cmovne %rcx,%rdx
  400613:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  400617:	48 c1 ef 06          	shr    $0x6,%rdi
  40061b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40061f:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  400623:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400626:	83 c0 01             	add    $0x1,%eax
  400629:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40062c:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  400630:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  400634:	e9 62 ff ff ff       	jmpq   40059b <main+0x7b>
  400639:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40063d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  400641:	48 0f 4c c1          	cmovl  %rcx,%rax
  400645:	bf f8 07 40 00       	mov    $0x4007f8,%edi
  40064a:	31 d2                	xor    %edx,%edx
  40064c:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  400650:	88 d0                	mov    %dl,%al
  400652:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  400656:	48 c1 e6 2f          	shl    $0x2f,%rsi
  40065a:	48 09 f4             	or     %rsi,%rsp
  40065d:	e8 8e fd ff ff       	callq  4003f0 <printf@plt>
  400662:	48 8b 4c 24 f8       	mov    -0x8(%rsp),%rcx
  400667:	48 89 e6             	mov    %rsp,%rsi
  40066a:	48 c1 fe 3f          	sar    $0x3f,%rsi
  40066e:	48 81 f9 62 06 40 00 	cmp    $0x400662,%rcx
  400675:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  400679:	48 0f 45 f1          	cmovne %rcx,%rsi
  40067d:	45 31 c0             	xor    %r8d,%r8d
  400680:	89 45 ac             	mov    %eax,-0x54(%rbp)
  400683:	44 89 c0             	mov    %r8d,%eax
  400686:	48 c1 e6 2f          	shl    $0x2f,%rsi
  40068a:	48 09 f4             	or     %rsi,%rsp
  40068d:	48 83 c4 60          	add    $0x60,%rsp
  400691:	5d                   	pop    %rbp
  400692:	c3                   	retq   
  400693:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40069a:	00 00 00 
  40069d:	0f 1f 00             	nopl   (%rax)

00000000004006a0 <__llvm_retpoline_r11>:
  4006a0:	e8 0b 00 00 00       	callq  4006b0 <__llvm_retpoline_r11+0x10>
  4006a5:	f3 90                	pause  
  4006a7:	0f ae e8             	lfence 
  4006aa:	e9 f6 ff ff ff       	jmpq   4006a5 <__llvm_retpoline_r11+0x5>
  4006af:	90                   	nop
  4006b0:	4c 89 1c 24          	mov    %r11,(%rsp)
  4006b4:	c3                   	retq   
  4006b5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4006bc:	00 00 00 
  4006bf:	90                   	nop

00000000004006c0 <encrypt>:
  4006c0:	31 c0                	xor    %eax,%eax
  4006c2:	48 c7 44 24 f8 00 00 	movq   $0x0,-0x8(%rsp)
  4006c9:	00 00 
  4006cb:	c6 44 24 f7 01       	movb   $0x1,-0x9(%rsp)
  4006d0:	48 89 7c 24 e8       	mov    %rdi,-0x18(%rsp)
  4006d5:	48 89 74 24 e0       	mov    %rsi,-0x20(%rsp)
  4006da:	89 44 24 dc          	mov    %eax,-0x24(%rsp)
  4006de:	8b 44 24 dc          	mov    -0x24(%rsp),%eax
  4006e2:	83 f8 1f             	cmp    $0x1f,%eax
  4006e5:	89 44 24 d8          	mov    %eax,-0x28(%rsp)
  4006e9:	73 3c                	jae    400727 <encrypt+0x67>
  4006eb:	48 8b 44 24 e8       	mov    -0x18(%rsp),%rax
  4006f0:	48 8b 4c 24 e0       	mov    -0x20(%rsp),%rcx
  4006f5:	89 ca                	mov    %ecx,%edx
  4006f7:	be 1f 00 00 00       	mov    $0x1f,%esi
  4006fc:	8b 7c 24 d8          	mov    -0x28(%rsp),%edi
  400700:	29 fe                	sub    %edi,%esi
  400702:	89 f1                	mov    %esi,%ecx
  400704:	be 01 00 00 00       	mov    $0x1,%esi
  400709:	d3 e6                	shl    %cl,%esi
  40070b:	21 f2                	and    %esi,%edx
  40070d:	89 d2                	mov    %edx,%edx
  40070f:	41 89 d0             	mov    %edx,%r8d
  400712:	4c 31 c0             	xor    %r8,%rax
  400715:	48 89 44 24 e8       	mov    %rax,-0x18(%rsp)
  40071a:	8b 44 24 d8          	mov    -0x28(%rsp),%eax
  40071e:	83 c0 01             	add    $0x1,%eax
  400721:	89 44 24 dc          	mov    %eax,-0x24(%rsp)
  400725:	eb b7                	jmp    4006de <encrypt+0x1e>
  400727:	48 8b 44 24 e8       	mov    -0x18(%rsp),%rax
  40072c:	c3                   	retq   
  40072d:	0f 1f 00             	nopl   (%rax)

0000000000400730 <__libc_csu_init>:
  400730:	41 57                	push   %r15
  400732:	41 56                	push   %r14
  400734:	49 89 d7             	mov    %rdx,%r15
  400737:	41 55                	push   %r13
  400739:	41 54                	push   %r12
  40073b:	4c 8d 25 ce 06 20 00 	lea    0x2006ce(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400742:	55                   	push   %rbp
  400743:	48 8d 2d ce 06 20 00 	lea    0x2006ce(%rip),%rbp        # 600e18 <__init_array_end>
  40074a:	53                   	push   %rbx
  40074b:	41 89 fd             	mov    %edi,%r13d
  40074e:	49 89 f6             	mov    %rsi,%r14
  400751:	4c 29 e5             	sub    %r12,%rbp
  400754:	48 83 ec 08          	sub    $0x8,%rsp
  400758:	48 c1 fd 03          	sar    $0x3,%rbp
  40075c:	e8 67 fc ff ff       	callq  4003c8 <_init>
  400761:	48 85 ed             	test   %rbp,%rbp
  400764:	74 20                	je     400786 <__libc_csu_init+0x56>
  400766:	31 db                	xor    %ebx,%ebx
  400768:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40076f:	00 
  400770:	4c 89 fa             	mov    %r15,%rdx
  400773:	4c 89 f6             	mov    %r14,%rsi
  400776:	44 89 ef             	mov    %r13d,%edi
  400779:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40077d:	48 83 c3 01          	add    $0x1,%rbx
  400781:	48 39 dd             	cmp    %rbx,%rbp
  400784:	75 ea                	jne    400770 <__libc_csu_init+0x40>
  400786:	48 83 c4 08          	add    $0x8,%rsp
  40078a:	5b                   	pop    %rbx
  40078b:	5d                   	pop    %rbp
  40078c:	41 5c                	pop    %r12
  40078e:	41 5d                	pop    %r13
  400790:	41 5e                	pop    %r14
  400792:	41 5f                	pop    %r15
  400794:	c3                   	retq   
  400795:	90                   	nop
  400796:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40079d:	00 00 00 

00000000004007a0 <__libc_csu_fini>:
  4007a0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004007a4 <_fini>:
  4007a4:	48 83 ec 08          	sub    $0x8,%rsp
  4007a8:	48 83 c4 08          	add    $0x8,%rsp
  4007ac:	c3                   	retq   

Disassembly of section .rodata:

00000000004007b0 <_IO_stdin_used>:
  4007b0:	01 00                	add    %eax,(%rax)
  4007b2:	02 00                	add    (%rax),%al
  4007b4:	41                   	rex.B
  4007b5:	42                   	rex.X
  4007b6:	43                   	rex.XB
  4007b7:	44                   	rex.R
  4007b8:	45                   	rex.RB
  4007b9:	46                   	rex.RX
  4007ba:	47                   	rex.RXB
  4007bb:	48                   	rex.W
  4007bc:	49                   	rex.WB
  4007bd:	4a                   	rex.WX
  4007be:	4b                   	rex.WXB
  4007bf:	4c                   	rex.WR
  4007c0:	4d                   	rex.WRB
  4007c1:	4e                   	rex.WRX
  4007c2:	4f 50                	rex.WRXB push %r8
  4007c4:	51                   	push   %rcx
  4007c5:	52                   	push   %rdx
  4007c6:	53                   	push   %rbx
  4007c7:	54                   	push   %rsp
  4007c8:	55                   	push   %rbp
  4007c9:	56                   	push   %rsi
  4007ca:	57                   	push   %rdi
  4007cb:	58                   	pop    %rax
  4007cc:	59                   	pop    %rcx
  4007cd:	5a                   	pop    %rdx
  4007ce:	61                   	(bad)  
  4007cf:	62 63 64 65 66       	(bad)  {%k5}
  4007d4:	67 68 69 6a 6b 6c    	addr32 pushq $0x6c6b6a69
  4007da:	6d                   	insl   (%dx),%es:(%rdi)
  4007db:	6e                   	outsb  %ds:(%rsi),(%dx)
  4007dc:	6f                   	outsl  %ds:(%rsi),(%dx)
  4007dd:	70 71                	jo     400850 <__GNU_EH_FRAME_HDR+0x54>
  4007df:	72 73                	jb     400854 <__GNU_EH_FRAME_HDR+0x58>
  4007e1:	74 75                	je     400858 <__GNU_EH_FRAME_HDR+0x5c>
  4007e3:	76 77                	jbe    40085c <__GNU_EH_FRAME_HDR+0x60>
  4007e5:	78 79                	js     400860 <__GNU_EH_FRAME_HDR+0x64>
  4007e7:	7a 30                	jp     400819 <__GNU_EH_FRAME_HDR+0x1d>
  4007e9:	31 32                	xor    %esi,(%rdx)
  4007eb:	33 34 35 36 37 38 39 	xor    0x39383736(,%rsi,1),%esi
  4007f2:	2b 2f                	sub    (%rdi),%ebp
  4007f4:	00 25 63 00 0a 00    	add    %ah,0xa0063(%rip)        # 4a085d <__FRAME_END__+0x9fee1>

Disassembly of section .eh_frame_hdr:

00000000004007fc <__GNU_EH_FRAME_HDR>:
  4007fc:	01 1b                	add    %ebx,(%rbx)
  4007fe:	03 3b                	add    (%rbx),%edi
  400800:	48 00 00             	rex.W add %al,(%rax)
  400803:	00 08                	add    %cl,(%rax)
  400805:	00 00                	add    %al,(%rax)
  400807:	00 e4                	add    %ah,%ah
  400809:	fb                   	sti    
  40080a:	ff                   	(bad)  
  40080b:	ff a4 00 00 00 04 fc 	jmpq   *-0x3fc0000(%rax,%rax,1)
  400812:	ff                   	(bad)  
  400813:	ff 64 00 00          	jmpq   *0x0(%rax,%rax,1)
  400817:	00 34 fc             	add    %dh,(%rsp,%rdi,8)
  40081a:	ff                   	(bad)  
  40081b:	ff 90 00 00 00 f4    	callq  *-0xc000000(%rax)
  400821:	fc                   	cld    
  400822:	ff                   	(bad)  
  400823:	ff cc                	dec    %esp
  400825:	00 00                	add    %al,(%rax)
  400827:	00 24 fd ff ff ec 00 	add    %ah,0xecffff(,%rdi,8)
  40082e:	00 00                	add    %al,(%rax)
  400830:	c4                   	(bad)  
  400831:	fe                   	(bad)  
  400832:	ff                   	(bad)  
  400833:	ff 0c 01             	decl   (%rcx,%rax,1)
  400836:	00 00                	add    %al,(%rax)
  400838:	34 ff                	xor    $0xff,%al
  40083a:	ff                   	(bad)  
  40083b:	ff 24 01             	jmpq   *(%rcx,%rax,1)
  40083e:	00 00                	add    %al,(%rax)
  400840:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
  400841:	ff                   	(bad)  
  400842:	ff                   	(bad)  
  400843:	ff 6c 01 00          	ljmp   *0x0(%rcx,%rax,1)
	...

Disassembly of section .eh_frame:

0000000000400848 <__FRAME_END__-0x134>:
  400848:	14 00                	adc    $0x0,%al
  40084a:	00 00                	add    %al,(%rax)
  40084c:	00 00                	add    %al,(%rax)
  40084e:	00 00                	add    %al,(%rax)
  400850:	01 7a 52             	add    %edi,0x52(%rdx)
  400853:	00 01                	add    %al,(%rcx)
  400855:	78 10                	js     400867 <__GNU_EH_FRAME_HDR+0x6b>
  400857:	01 1b                	add    %ebx,(%rbx)
  400859:	0c 07                	or     $0x7,%al
  40085b:	08 90 01 07 10 10    	or     %dl,0x10100701(%rax)
  400861:	00 00                	add    %al,(%rax)
  400863:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400866:	00 00                	add    %al,(%rax)
  400868:	98                   	cwtl   
  400869:	fb                   	sti    
  40086a:	ff                   	(bad)  
  40086b:	ff 2b                	ljmp   *(%rbx)
  40086d:	00 00                	add    %al,(%rax)
  40086f:	00 00                	add    %al,(%rax)
  400871:	00 00                	add    %al,(%rax)
  400873:	00 14 00             	add    %dl,(%rax,%rax,1)
  400876:	00 00                	add    %al,(%rax)
  400878:	00 00                	add    %al,(%rax)
  40087a:	00 00                	add    %al,(%rax)
  40087c:	01 7a 52             	add    %edi,0x52(%rdx)
  40087f:	00 01                	add    %al,(%rcx)
  400881:	78 10                	js     400893 <__GNU_EH_FRAME_HDR+0x97>
  400883:	01 1b                	add    %ebx,(%rbx)
  400885:	0c 07                	or     $0x7,%al
  400887:	08 90 01 00 00 10    	or     %dl,0x10000001(%rax)
  40088d:	00 00                	add    %al,(%rax)
  40088f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400892:	00 00                	add    %al,(%rax)
  400894:	9c                   	pushfq 
  400895:	fb                   	sti    
  400896:	ff                   	(bad)  
  400897:	ff 02                	incl   (%rdx)
  400899:	00 00                	add    %al,(%rax)
  40089b:	00 00                	add    %al,(%rax)
  40089d:	00 00                	add    %al,(%rax)
  40089f:	00 24 00             	add    %ah,(%rax,%rax,1)
  4008a2:	00 00                	add    %al,(%rax)
  4008a4:	30 00                	xor    %al,(%rax)
  4008a6:	00 00                	add    %al,(%rax)
  4008a8:	38 fb                	cmp    %bh,%bl
  4008aa:	ff                   	(bad)  
  4008ab:	ff 20                	jmpq   *(%rax)
  4008ad:	00 00                	add    %al,(%rax)
  4008af:	00 00                	add    %al,(%rax)
  4008b1:	0e                   	(bad)  
  4008b2:	10 46 0e             	adc    %al,0xe(%rsi)
  4008b5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  4008b8:	0b 77 08             	or     0x8(%rdi),%esi
  4008bb:	80 00 3f             	addb   $0x3f,(%rax)
  4008be:	1a 3b                	sbb    (%rbx),%bh
  4008c0:	2a 33                	sub    (%rbx),%dh
  4008c2:	24 22                	and    $0x22,%al
  4008c4:	00 00                	add    %al,(%rax)
  4008c6:	00 00                	add    %al,(%rax)
  4008c8:	1c 00                	sbb    $0x0,%al
  4008ca:	00 00                	add    %al,(%rax)
  4008cc:	58                   	pop    %rax
  4008cd:	00 00                	add    %al,(%rax)
  4008cf:	00 20                	add    %ah,(%rax)
  4008d1:	fc                   	cld    
  4008d2:	ff                   	(bad)  
  4008d3:	ff 2d 00 00 00 00    	ljmp   *0x0(%rip)        # 4008d9 <__GNU_EH_FRAME_HDR+0xdd>
  4008d9:	41 0e                	rex.B (bad) 
  4008db:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4008e1:	68 0c 07 08 00       	pushq  $0x8070c
  4008e6:	00 00                	add    %al,(%rax)
  4008e8:	1c 00                	sbb    $0x0,%al
  4008ea:	00 00                	add    %al,(%rax)
  4008ec:	78 00                	js     4008ee <__GNU_EH_FRAME_HDR+0xf2>
  4008ee:	00 00                	add    %al,(%rax)
  4008f0:	30 fc                	xor    %bh,%ah
  4008f2:	ff                   	(bad)  
  4008f3:	ff 73 01             	pushq  0x1(%rbx)
  4008f6:	00 00                	add    %al,(%rax)
  4008f8:	00 41 0e             	add    %al,0xe(%rcx)
  4008fb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400901:	03 6e 01             	add    0x1(%rsi),%ebp
  400904:	0c 07                	or     $0x7,%al
  400906:	08 00                	or     %al,(%rax)
  400908:	14 00                	adc    $0x0,%al
  40090a:	00 00                	add    %al,(%rax)
  40090c:	98                   	cwtl   
  40090d:	00 00                	add    %al,(%rax)
  40090f:	00 b0 fd ff ff 6d    	add    %dh,0x6dfffffd(%rax)
	...
  40091d:	00 00                	add    %al,(%rax)
  40091f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
  400923:	00 b0 00 00 00 08    	add    %dh,0x8000000(%rax)
  400929:	fe                   	(bad)  
  40092a:	ff                   	(bad)  
  40092b:	ff 65 00             	jmpq   *0x0(%rbp)
  40092e:	00 00                	add    %al,(%rax)
  400930:	00 42 0e             	add    %al,0xe(%rdx)
  400933:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
  400939:	8e 03                	mov    (%rbx),%es
  40093b:	45 0e                	rex.RB (bad) 
  40093d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
  400943:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86701791 <_end+0xffffffff86100751>
  400949:	06                   	(bad)  
  40094a:	48 0e                	rex.W (bad) 
  40094c:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  400952:	72 0e                	jb     400962 <__GNU_EH_FRAME_HDR+0x166>
  400954:	38 41 0e             	cmp    %al,0xe(%rcx)
  400957:	30 41 0e             	xor    %al,0xe(%rcx)
  40095a:	28 42 0e             	sub    %al,0xe(%rdx)
  40095d:	20 42 0e             	and    %al,0xe(%rdx)
  400960:	18 42 0e             	sbb    %al,0xe(%rdx)
  400963:	10 42 0e             	adc    %al,0xe(%rdx)
  400966:	08 00                	or     %al,(%rax)
  400968:	10 00                	adc    %al,(%rax)
  40096a:	00 00                	add    %al,(%rax)
  40096c:	f8                   	clc    
  40096d:	00 00                	add    %al,(%rax)
  40096f:	00 30                	add    %dh,(%rax)
  400971:	fe                   	(bad)  
  400972:	ff                   	(bad)  
  400973:	ff 02                	incl   (%rdx)
  400975:	00 00                	add    %al,(%rax)
  400977:	00 00                	add    %al,(%rax)
  400979:	00 00                	add    %al,(%rax)
	...

000000000040097c <__FRAME_END__>:
  40097c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	e0 04                	loopne 600e16 <__frame_dummy_init_array_entry+0x6>
  600e12:	40 00 00             	add    %al,(%rax)
  600e15:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	b0 04                	mov    $0x4,%al
  600e1a:	40 00 00             	add    %al,(%rax)
  600e1d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000600e20 <_DYNAMIC>:
  600e20:	01 00                	add    %eax,(%rax)
  600e22:	00 00                	add    %al,(%rax)
  600e24:	00 00                	add    %al,(%rax)
  600e26:	00 00                	add    %al,(%rax)
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	0c 00                	or     $0x0,%al
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	c8 03 40 00          	enterq $0x4003,$0x0
  600e3c:	00 00                	add    %al,(%rax)
  600e3e:	00 00                	add    %al,(%rax)
  600e40:	0d 00 00 00 00       	or     $0x0,%eax
  600e45:	00 00                	add    %al,(%rax)
  600e47:	00 a4 07 40 00 00 00 	add    %ah,0x40(%rdi,%rax,1)
  600e4e:	00 00                	add    %al,(%rax)
  600e50:	19 00                	sbb    %eax,(%rax)
  600e52:	00 00                	add    %al,(%rax)
  600e54:	00 00                	add    %al,(%rax)
  600e56:	00 00                	add    %al,(%rax)
  600e58:	10 0e                	adc    %cl,(%rsi)
  600e5a:	60                   	(bad)  
  600e5b:	00 00                	add    %al,(%rax)
  600e5d:	00 00                	add    %al,(%rax)
  600e5f:	00 1b                	add    %bl,(%rbx)
  600e61:	00 00                	add    %al,(%rax)
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 08                	add    %cl,(%rax)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 1a                	add    %bl,(%rdx)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 18                	add    %bl,(%rax)
  600e79:	0e                   	(bad)  
  600e7a:	60                   	(bad)  
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e82:	00 00                	add    %al,(%rax)
  600e84:	00 00                	add    %al,(%rax)
  600e86:	00 00                	add    %al,(%rax)
  600e88:	08 00                	or     %al,(%rax)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	f5                   	cmc    
  600e91:	fe                   	(bad)  
  600e92:	ff 6f 00             	ljmp   *0x0(%rdi)
  600e95:	00 00                	add    %al,(%rax)
  600e97:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ea5 <_DYNAMIC+0x85>
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 18                	add    %bl,(%rax)
  600ea9:	03 40 00             	add    0x0(%rax),%eax
  600eac:	00 00                	add    %al,(%rax)
  600eae:	00 00                	add    %al,(%rax)
  600eb0:	06                   	(bad)  
  600eb1:	00 00                	add    %al,(%rax)
  600eb3:	00 00                	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 0a                	add    %cl,(%rdx)
  600ec1:	00 00                	add    %al,(%rax)
  600ec3:	00 00                	add    %al,(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 3f                	add    %bh,(%rdi)
  600ec9:	00 00                	add    %al,(%rax)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 0b                	add    %cl,(%rbx)
  600ed1:	00 00                	add    %al,(%rax)
  600ed3:	00 00                	add    %al,(%rax)
  600ed5:	00 00                	add    %al,(%rax)
  600ed7:	00 18                	add    %bl,(%rax)
  600ed9:	00 00                	add    %al,(%rax)
  600edb:	00 00                	add    %al,(%rax)
  600edd:	00 00                	add    %al,(%rax)
  600edf:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 600ee5 <_DYNAMIC+0xc5>
	...
  600eed:	00 00                	add    %al,(%rax)
  600eef:	00 03                	add    %al,(%rbx)
	...
  600ef9:	10 60 00             	adc    %ah,0x0(%rax)
  600efc:	00 00                	add    %al,(%rax)
  600efe:	00 00                	add    %al,(%rax)
  600f00:	02 00                	add    (%rax),%al
  600f02:	00 00                	add    %al,(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	18 00                	sbb    %al,(%rax)
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	14 00                	adc    $0x0,%al
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	07                   	(bad)  
  600f19:	00 00                	add    %al,(%rax)
  600f1b:	00 00                	add    %al,(%rax)
  600f1d:	00 00                	add    %al,(%rax)
  600f1f:	00 17                	add    %dl,(%rdi)
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 b0 03 40 00 00    	add    %dh,0x4003(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 07                	add    %al,(%rdi)
  600f31:	00 00                	add    %al,(%rax)
  600f33:	00 00                	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 80 03 40 00 00    	add    %al,0x4003(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 08                	add    %cl,(%rax)
  600f41:	00 00                	add    %al,(%rax)
  600f43:	00 00                	add    %al,(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 30                	add    %dh,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 09                	add    %cl,(%rcx)
  600f51:	00 00                	add    %al,(%rax)
  600f53:	00 00                	add    %al,(%rax)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 18                	add    %bl,(%rax)
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 fe                	add    %bh,%dh
  600f61:	ff                   	(bad)  
  600f62:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 60 03             	add    %ah,0x3(%rax)
  600f6a:	40 00 00             	add    %al,(%rax)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 ff                	add    %bh,%bh
  600f71:	ff                   	(bad)  
  600f72:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 01                	add    %al,(%rcx)
  600f79:	00 00                	add    %al,(%rax)
  600f7b:	00 00                	add    %al,(%rax)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 f0                	add    %dh,%al
  600f81:	ff                   	(bad)  
  600f82:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 58 03             	add    %bl,0x3(%rax)
  600f8a:	40 00 00             	add    %al,(%rax)
	...

Disassembly of section .got:

0000000000600ff0 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	20 0e                	and    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 f6                	add    %dh,%dh
  601019:	03 40 00             	add    0x0(%rax),%eax
  60101c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601020 <__data_start>:
	...

0000000000601028 <__dso_handle>:
	...

0000000000601030 <base64>:
  601030:	b4 07                	mov    $0x7,%ah
  601032:	40 00 00             	add    %al,(%rax)
  601035:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000601038 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x400350>
   a:	74 75                	je     81 <_init-0x400347>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 35 2e 30 2d 33    	cs xor $0x332d302e,%eax
  14:	75 62                	jne    78 <_init-0x400350>
  16:	75 6e                	jne    86 <_init-0x400342>
  18:	74 75                	je     8f <_init-0x400339>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  22:	20 37                	and    %dh,(%rdi)
  24:	2e 35 2e 30 00 55    	cs xor $0x5500302e,%eax
  2a:	62                   	(bad)  
  2b:	75 6e                	jne    9b <_init-0x40032d>
  2d:	74 75                	je     a4 <_init-0x400324>
  2f:	20 63 6c             	and    %ah,0x6c(%rbx)
  32:	61                   	(bad)  
  33:	6e                   	outsb  %ds:(%rsi),(%dx)
  34:	67 20 76 65          	and    %dh,0x65(%esi)
  38:	72 73                	jb     ad <_init-0x40031b>
  3a:	69 6f 6e 20 31 31 2e 	imul   $0x2e313120,0x6e(%rdi),%ebp
  41:	31 2e                	xor    %ebp,(%rsi)
  43:	30 2d 2b 2b 32 30    	xor    %ch,0x30322b2b(%rip)        # 30322b74 <_end+0x2fd21b34>
  49:	32 31                	xor    (%rcx),%dh
  4b:	30 38                	xor    %bh,(%rax)
  4d:	30 36                	xor    %dh,(%rsi)
  4f:	30 39                	xor    %bh,(%rcx)
  51:	31 34 31             	xor    %esi,(%rcx,%rsi,1)
  54:	37                   	(bad)  
  55:	2b 31                	sub    (%rcx),%esi
  57:	66 64 65 63 35 39 62 	fs movslq %gs:0x66666239(%rip),%si        # 66666299 <_end+0x66065259>
  5e:	66 66 
  60:	63 31                	movslq (%rcx),%esi
  62:	2d 31 7e 65 78       	sub    $0x78657e31,%eax
  67:	70 31                	jo     9a <_init-0x40032e>
  69:	7e 32                	jle    9d <_init-0x40032b>
  6b:	30 32                	xor    %dh,(%rdx)
  6d:	31 30                	xor    %esi,(%rax)
  6f:	38 30                	cmp    %dh,(%rax)
  71:	36 30 37             	xor    %dh,%ss:(%rdi)
  74:	32 30                	xor    (%rax),%dh
  76:	34 30                	xor    $0x30,%al
  78:	2e 31 36             	xor    %esi,%cs:(%rsi)
  7b:	37                   	(bad)  
	...
