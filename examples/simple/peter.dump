
peter:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x153>
  400248:	78 38                	js     400282 <_init-0x146>
  40024a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 03                	add    %al,(%rbx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 02                	add    %al,(%rdx)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 00                	add    %al,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 30                	add    %dh,(%rax)
  400285:	2e 34 41             	cs xor $0x41,%al
  400288:	29 b4 7e 6e ed 8b 99 	sub    %esi,-0x66741292(%rsi,%rdi,2)
  40028f:	ce                   	(bad)  
  400290:	8a 03                	mov    (%rbx),%al
  400292:	5b                   	pop    %rbx
  400293:	b5 b2                	mov    $0xb2,%ch
  400295:	89 03                	mov    %eax,(%rbx)
  400297:	39                   	.byte 0x39

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     (%rax),%eax
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	12 00                	adc    (%rax),%al
  4002ea:	00 00                	add    %al,(%rax)
  4002ec:	12 00                	adc    (%rax),%al
	...
  4002fe:	00 00                	add    %al,(%rax)
  400300:	30 00                	xor    %al,(%rax)
  400302:	00 00                	add    %al,(%rax)
  400304:	20 00                	and    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000400318 <.dynstr>:
  400318:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40031c:	63 2e                	movslq (%rsi),%ebp
  40031e:	73 6f                	jae    40038f <_init-0x39>
  400320:	2e 36 00 70 72       	cs add %dh,%ss:0x72(%rax)
  400325:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
  40032c:	6c                   	insb   (%dx),%es:(%rdi)
  40032d:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400334:	72 74                	jb     4003aa <_init-0x1e>
  400336:	5f                   	pop    %rdi
  400337:	6d                   	insl   (%dx),%es:(%rdi)
  400338:	61                   	(bad)  
  400339:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
  400340:	43 5f                	rex.XB pop %r15
  400342:	32 2e                	xor    (%rsi),%ch
  400344:	32 2e                	xor    (%rsi),%ch
  400346:	35 00 5f 5f 67       	xor    $0x675f5f00,%eax
  40034b:	6d                   	insl   (%dx),%es:(%rdi)
  40034c:	6f                   	outsl  %ds:(%rsi),(%dx)
  40034d:	6e                   	outsb  %ds:(%rsi),(%dx)
  40034e:	5f                   	pop    %rdi
  40034f:	73 74                	jae    4003c5 <_init-0x3>
  400351:	61                   	(bad)  
  400352:	72 74                	jb     4003c8 <_init>
  400354:	5f                   	pop    %rdi
  400355:	5f                   	pop    %rdi
	...

Disassembly of section .gnu.version:

0000000000400358 <.gnu.version>:
  400358:	00 00                	add    %al,(%rax)
  40035a:	02 00                	add    (%rax),%al
  40035c:	02 00                	add    (%rax),%al
	...

Disassembly of section .gnu.version_r:

0000000000400360 <.gnu.version_r>:
  400360:	01 00                	add    %eax,(%rax)
  400362:	01 00                	add    %eax,(%rax)
  400364:	01 00                	add    %eax,(%rax)
  400366:	00 00                	add    %al,(%rax)
  400368:	10 00                	adc    %al,(%rax)
  40036a:	00 00                	add    %al,(%rax)
  40036c:	00 00                	add    %al,(%rax)
  40036e:	00 00                	add    %al,(%rax)
  400370:	75 1a                	jne    40038c <_init-0x3c>
  400372:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400378:	24 00                	and    $0x0,%al
  40037a:	00 00                	add    %al,(%rax)
  40037c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000400380 <.rela.dyn>:
  400380:	f0 0f 60 00          	lock punpcklbw (%rax),%mm0
  400384:	00 00                	add    %al,(%rax)
  400386:	00 00                	add    %al,(%rax)
  400388:	06                   	(bad)  
  400389:	00 00                	add    %al,(%rax)
  40038b:	00 02                	add    %al,(%rdx)
	...
  400395:	00 00                	add    %al,(%rax)
  400397:	00 f8                	add    %bh,%al
  400399:	0f 60 00             	punpcklbw (%rax),%mm0
  40039c:	00 00                	add    %al,(%rax)
  40039e:	00 00                	add    %al,(%rax)
  4003a0:	06                   	(bad)  
  4003a1:	00 00                	add    %al,(%rax)
  4003a3:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .rela.plt:

00000000004003b0 <.rela.plt>:
  4003b0:	18 10                	sbb    %dl,(%rax)
  4003b2:	60                   	(bad)  
  4003b3:	00 00                	add    %al,(%rax)
  4003b5:	00 00                	add    %al,(%rax)
  4003b7:	00 07                	add    %al,(%rdi)
  4003b9:	00 00                	add    %al,(%rax)
  4003bb:	00 01                	add    %al,(%rcx)
	...

Disassembly of section .init:

00000000004003c8 <_init>:
  4003c8:	48 83 ec 08          	sub    $0x8,%rsp
  4003cc:	48 8b 05 25 0c 20 00 	mov    0x200c25(%rip),%rax        # 600ff8 <__gmon_start__>
  4003d3:	48 85 c0             	test   %rax,%rax
  4003d6:	74 02                	je     4003da <_init+0x12>
  4003d8:	ff d0                	callq  *%rax
  4003da:	48 83 c4 08          	add    $0x8,%rsp
  4003de:	c3                   	retq   

Disassembly of section .plt:

00000000004003e0 <.plt>:
  4003e0:	ff 35 22 0c 20 00    	pushq  0x200c22(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003e6:	ff 25 24 0c 20 00    	jmpq   *0x200c24(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003f0 <printf@plt>:
  4003f0:	ff 25 22 0c 20 00    	jmpq   *0x200c22(%rip)        # 601018 <printf@GLIBC_2.2.5>
  4003f6:	68 00 00 00 00       	pushq  $0x0
  4003fb:	e9 e0 ff ff ff       	jmpq   4003e0 <.plt>

Disassembly of section .text:

0000000000400400 <_start>:
  400400:	31 ed                	xor    %ebp,%ebp
  400402:	49 89 d1             	mov    %rdx,%r9
  400405:	5e                   	pop    %rsi
  400406:	48 89 e2             	mov    %rsp,%rdx
  400409:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40040d:	50                   	push   %rax
  40040e:	54                   	push   %rsp
  40040f:	49 c7 c0 b0 07 40 00 	mov    $0x4007b0,%r8
  400416:	48 c7 c1 40 07 40 00 	mov    $0x400740,%rcx
  40041d:	48 c7 c7 a0 05 40 00 	mov    $0x4005a0,%rdi
  400424:	ff 15 c6 0b 20 00    	callq  *0x200bc6(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  40042a:	f4                   	hlt    
  40042b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400430 <_dl_relocate_static_pie>:
  400430:	f3 c3                	repz retq 
  400432:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400439:	00 00 00 
  40043c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400440 <deregister_tm_clones>:
  400440:	55                   	push   %rbp
  400441:	b8 38 10 60 00       	mov    $0x601038,%eax
  400446:	48 3d 38 10 60 00    	cmp    $0x601038,%rax
  40044c:	48 89 e5             	mov    %rsp,%rbp
  40044f:	74 17                	je     400468 <deregister_tm_clones+0x28>
  400451:	b8 00 00 00 00       	mov    $0x0,%eax
  400456:	48 85 c0             	test   %rax,%rax
  400459:	74 0d                	je     400468 <deregister_tm_clones+0x28>
  40045b:	5d                   	pop    %rbp
  40045c:	bf 38 10 60 00       	mov    $0x601038,%edi
  400461:	ff e0                	jmpq   *%rax
  400463:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400468:	5d                   	pop    %rbp
  400469:	c3                   	retq   
  40046a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400470 <register_tm_clones>:
  400470:	be 38 10 60 00       	mov    $0x601038,%esi
  400475:	55                   	push   %rbp
  400476:	48 81 ee 38 10 60 00 	sub    $0x601038,%rsi
  40047d:	48 89 e5             	mov    %rsp,%rbp
  400480:	48 c1 fe 03          	sar    $0x3,%rsi
  400484:	48 89 f0             	mov    %rsi,%rax
  400487:	48 c1 e8 3f          	shr    $0x3f,%rax
  40048b:	48 01 c6             	add    %rax,%rsi
  40048e:	48 d1 fe             	sar    %rsi
  400491:	74 15                	je     4004a8 <register_tm_clones+0x38>
  400493:	b8 00 00 00 00       	mov    $0x0,%eax
  400498:	48 85 c0             	test   %rax,%rax
  40049b:	74 0b                	je     4004a8 <register_tm_clones+0x38>
  40049d:	5d                   	pop    %rbp
  40049e:	bf 38 10 60 00       	mov    $0x601038,%edi
  4004a3:	ff e0                	jmpq   *%rax
  4004a5:	0f 1f 00             	nopl   (%rax)
  4004a8:	5d                   	pop    %rbp
  4004a9:	c3                   	retq   
  4004aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004b0 <__do_global_dtors_aux>:
  4004b0:	80 3d 81 0b 20 00 00 	cmpb   $0x0,0x200b81(%rip)        # 601038 <__TMC_END__>
  4004b7:	75 17                	jne    4004d0 <__do_global_dtors_aux+0x20>
  4004b9:	55                   	push   %rbp
  4004ba:	48 89 e5             	mov    %rsp,%rbp
  4004bd:	e8 7e ff ff ff       	callq  400440 <deregister_tm_clones>
  4004c2:	c6 05 6f 0b 20 00 01 	movb   $0x1,0x200b6f(%rip)        # 601038 <__TMC_END__>
  4004c9:	5d                   	pop    %rbp
  4004ca:	c3                   	retq   
  4004cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4004d0:	f3 c3                	repz retq 
  4004d2:	0f 1f 40 00          	nopl   0x0(%rax)
  4004d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4004dd:	00 00 00 

00000000004004e0 <frame_dummy>:
  4004e0:	55                   	push   %rbp
  4004e1:	48 89 e5             	mov    %rsp,%rbp
  4004e4:	5d                   	pop    %rbp
  4004e5:	eb 89                	jmp    400470 <register_tm_clones>
  4004e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4004ee:	00 00 

00000000004004f0 <encrypt>:
  4004f0:	55                   	push   %rbp
  4004f1:	48 89 e5             	mov    %rsp,%rbp
  4004f4:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  4004fb:	48 89 e1             	mov    %rsp,%rcx
  4004fe:	48 c1 f9 3f          	sar    $0x3f,%rcx
  400502:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  400506:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40050a:	c7 45 ec 1f 00 00 00 	movl   $0x1f,-0x14(%rbp)
  400511:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  400515:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  400519:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40051d:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  400521:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  400525:	0f 8c 44 00 00 00    	jl     40056f <encrypt+0x7f>
  40052b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40052f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  400533:	48 0f 4c c1          	cmovl  %rcx,%rax
  400537:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40053b:	8b 75 ec             	mov    -0x14(%rbp),%esi
  40053e:	89 f1                	mov    %esi,%ecx
  400540:	be 01 00 00 00       	mov    $0x1,%esi
  400545:	d3 e6                	shl    %cl,%esi
  400547:	48 63 fe             	movslq %esi,%rdi
  40054a:	48 21 fa             	and    %rdi,%rdx
  40054d:	48 33 55 f8          	xor    -0x8(%rbp),%rdx
  400551:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  400555:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  400559:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40055c:	83 c0 ff             	add    $0xffffffff,%eax
  40055f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  400562:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  400566:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  40056a:	e9 aa ff ff ff       	jmpq   400519 <encrypt+0x29>
  40056f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400573:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  400577:	48 0f 4d c1          	cmovge %rcx,%rax
  40057b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40057f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  400583:	48 89 d0             	mov    %rdx,%rax
  400586:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40058a:	48 c1 e2 2f          	shl    $0x2f,%rdx
  40058e:	48 09 d4             	or     %rdx,%rsp
  400591:	5d                   	pop    %rbp
  400592:	c3                   	retq   
  400593:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40059a:	00 00 00 
  40059d:	0f 1f 00             	nopl   (%rax)

00000000004005a0 <main>:
  4005a0:	55                   	push   %rbp
  4005a1:	48 89 e5             	mov    %rsp,%rbp
  4005a4:	48 83 ec 60          	sub    $0x60,%rsp
  4005a8:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  4005af:	48 89 e1             	mov    %rsp,%rcx
  4005b2:	48 c1 f9 3f          	sar    $0x3f,%rcx
  4005b6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4005bd:	48 ba 3a ac 58 be 22 	movabs $0x1d381f22be58ac3a,%rdx
  4005c4:	1f 38 1d 
  4005c7:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  4005cb:	48 ba 40 db 6a 1c 59 	movabs $0x9a9d3591c6adb40,%rdx
  4005d2:	d3 a9 09 
  4005d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4005d9:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4005dd:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  4005e1:	48 c1 e1 2f          	shl    $0x2f,%rcx
  4005e5:	48 09 cc             	or     %rcx,%rsp
  4005e8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4005ec:	e8 ff fe ff ff       	callq  4004f0 <encrypt>
  4005f1:	48 8b 4c 24 f8       	mov    -0x8(%rsp),%rcx
  4005f6:	48 89 e2             	mov    %rsp,%rdx
  4005f9:	48 c1 fa 3f          	sar    $0x3f,%rdx
  4005fd:	48 81 f9 f1 05 40 00 	cmp    $0x4005f1,%rcx
  400604:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  400608:	48 0f 45 d1          	cmovne %rcx,%rdx
  40060c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  400610:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  400617:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  40061b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40061f:	83 7d e4 0a          	cmpl   $0xa,-0x1c(%rbp)
  400623:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  400627:	0f 8d 8c 00 00 00    	jge    4006b9 <main+0x119>
  40062d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  400631:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  400635:	48 0f 4d c1          	cmovge %rcx,%rax
  400639:	48 8b 14 25 30 10 60 	mov    0x601030,%rdx
  400640:	00 
  400641:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  400645:	48 81 e6 3f 00 00 00 	and    $0x3f,%rsi
  40064c:	0f be 3c 32          	movsbl (%rdx,%rsi,1),%edi
  400650:	41 89 c0             	mov    %eax,%r8d
  400653:	41 09 f8             	or     %edi,%r8d
  400656:	bf 05 08 40 00       	mov    $0x400805,%edi
  40065b:	45 31 c9             	xor    %r9d,%r9d
  40065e:	44 89 c6             	mov    %r8d,%esi
  400661:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  400665:	44 88 c8             	mov    %r9b,%al
  400668:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40066c:	48 c1 e2 2f          	shl    $0x2f,%rdx
  400670:	48 09 d4             	or     %rdx,%rsp
  400673:	e8 78 fd ff ff       	callq  4003f0 <printf@plt>
  400678:	48 8b 4c 24 f8       	mov    -0x8(%rsp),%rcx
  40067d:	48 89 e2             	mov    %rsp,%rdx
  400680:	48 c1 fa 3f          	sar    $0x3f,%rdx
  400684:	48 81 f9 78 06 40 00 	cmp    $0x400678,%rcx
  40068b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40068f:	48 0f 45 d1          	cmovne %rcx,%rdx
  400693:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  400697:	48 c1 ef 06          	shr    $0x6,%rdi
  40069b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40069f:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  4006a3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4006a6:	83 c0 01             	add    $0x1,%eax
  4006a9:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  4006ac:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  4006b0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  4006b4:	e9 62 ff ff ff       	jmpq   40061b <main+0x7b>
  4006b9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4006bd:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4006c1:	48 0f 4c c1          	cmovl  %rcx,%rax
  4006c5:	bf 08 08 40 00       	mov    $0x400808,%edi
  4006ca:	31 d2                	xor    %edx,%edx
  4006cc:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  4006d0:	88 d0                	mov    %dl,%al
  4006d2:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  4006d6:	48 c1 e6 2f          	shl    $0x2f,%rsi
  4006da:	48 09 f4             	or     %rsi,%rsp
  4006dd:	e8 0e fd ff ff       	callq  4003f0 <printf@plt>
  4006e2:	48 8b 4c 24 f8       	mov    -0x8(%rsp),%rcx
  4006e7:	48 89 e6             	mov    %rsp,%rsi
  4006ea:	48 c1 fe 3f          	sar    $0x3f,%rsi
  4006ee:	48 81 f9 e2 06 40 00 	cmp    $0x4006e2,%rcx
  4006f5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4006f9:	48 0f 45 f1          	cmovne %rcx,%rsi
  4006fd:	45 31 c0             	xor    %r8d,%r8d
  400700:	89 45 ac             	mov    %eax,-0x54(%rbp)
  400703:	44 89 c0             	mov    %r8d,%eax
  400706:	48 c1 e6 2f          	shl    $0x2f,%rsi
  40070a:	48 09 f4             	or     %rsi,%rsp
  40070d:	48 83 c4 60          	add    $0x60,%rsp
  400711:	5d                   	pop    %rbp
  400712:	c3                   	retq   
  400713:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40071a:	00 00 00 
  40071d:	0f 1f 00             	nopl   (%rax)

0000000000400720 <__llvm_retpoline_r11>:
  400720:	e8 0b 00 00 00       	callq  400730 <__llvm_retpoline_r11+0x10>
  400725:	f3 90                	pause  
  400727:	0f ae e8             	lfence 
  40072a:	e9 f6 ff ff ff       	jmpq   400725 <__llvm_retpoline_r11+0x5>
  40072f:	90                   	nop
  400730:	4c 89 1c 24          	mov    %r11,(%rsp)
  400734:	c3                   	retq   
  400735:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40073c:	00 00 00 
  40073f:	90                   	nop

0000000000400740 <__libc_csu_init>:
  400740:	41 57                	push   %r15
  400742:	41 56                	push   %r14
  400744:	49 89 d7             	mov    %rdx,%r15
  400747:	41 55                	push   %r13
  400749:	41 54                	push   %r12
  40074b:	4c 8d 25 be 06 20 00 	lea    0x2006be(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400752:	55                   	push   %rbp
  400753:	48 8d 2d be 06 20 00 	lea    0x2006be(%rip),%rbp        # 600e18 <__init_array_end>
  40075a:	53                   	push   %rbx
  40075b:	41 89 fd             	mov    %edi,%r13d
  40075e:	49 89 f6             	mov    %rsi,%r14
  400761:	4c 29 e5             	sub    %r12,%rbp
  400764:	48 83 ec 08          	sub    $0x8,%rsp
  400768:	48 c1 fd 03          	sar    $0x3,%rbp
  40076c:	e8 57 fc ff ff       	callq  4003c8 <_init>
  400771:	48 85 ed             	test   %rbp,%rbp
  400774:	74 20                	je     400796 <__libc_csu_init+0x56>
  400776:	31 db                	xor    %ebx,%ebx
  400778:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40077f:	00 
  400780:	4c 89 fa             	mov    %r15,%rdx
  400783:	4c 89 f6             	mov    %r14,%rsi
  400786:	44 89 ef             	mov    %r13d,%edi
  400789:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40078d:	48 83 c3 01          	add    $0x1,%rbx
  400791:	48 39 dd             	cmp    %rbx,%rbp
  400794:	75 ea                	jne    400780 <__libc_csu_init+0x40>
  400796:	48 83 c4 08          	add    $0x8,%rsp
  40079a:	5b                   	pop    %rbx
  40079b:	5d                   	pop    %rbp
  40079c:	41 5c                	pop    %r12
  40079e:	41 5d                	pop    %r13
  4007a0:	41 5e                	pop    %r14
  4007a2:	41 5f                	pop    %r15
  4007a4:	c3                   	retq   
  4007a5:	90                   	nop
  4007a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4007ad:	00 00 00 

00000000004007b0 <__libc_csu_fini>:
  4007b0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004007b4 <_fini>:
  4007b4:	48 83 ec 08          	sub    $0x8,%rsp
  4007b8:	48 83 c4 08          	add    $0x8,%rsp
  4007bc:	c3                   	retq   

Disassembly of section .rodata:

00000000004007c0 <_IO_stdin_used>:
  4007c0:	01 00                	add    %eax,(%rax)
  4007c2:	02 00                	add    (%rax),%al
  4007c4:	41                   	rex.B
  4007c5:	42                   	rex.X
  4007c6:	43                   	rex.XB
  4007c7:	44                   	rex.R
  4007c8:	45                   	rex.RB
  4007c9:	46                   	rex.RX
  4007ca:	47                   	rex.RXB
  4007cb:	48                   	rex.W
  4007cc:	49                   	rex.WB
  4007cd:	4a                   	rex.WX
  4007ce:	4b                   	rex.WXB
  4007cf:	4c                   	rex.WR
  4007d0:	4d                   	rex.WRB
  4007d1:	4e                   	rex.WRX
  4007d2:	4f 50                	rex.WRXB push %r8
  4007d4:	51                   	push   %rcx
  4007d5:	52                   	push   %rdx
  4007d6:	53                   	push   %rbx
  4007d7:	54                   	push   %rsp
  4007d8:	55                   	push   %rbp
  4007d9:	56                   	push   %rsi
  4007da:	57                   	push   %rdi
  4007db:	58                   	pop    %rax
  4007dc:	59                   	pop    %rcx
  4007dd:	5a                   	pop    %rdx
  4007de:	61                   	(bad)  
  4007df:	62 63 64 65 66       	(bad)  {%k5}
  4007e4:	67 68 69 6a 6b 6c    	addr32 pushq $0x6c6b6a69
  4007ea:	6d                   	insl   (%dx),%es:(%rdi)
  4007eb:	6e                   	outsb  %ds:(%rsi),(%dx)
  4007ec:	6f                   	outsl  %ds:(%rsi),(%dx)
  4007ed:	70 71                	jo     400860 <__GNU_EH_FRAME_HDR+0x54>
  4007ef:	72 73                	jb     400864 <__GNU_EH_FRAME_HDR+0x58>
  4007f1:	74 75                	je     400868 <__GNU_EH_FRAME_HDR+0x5c>
  4007f3:	76 77                	jbe    40086c <__GNU_EH_FRAME_HDR+0x60>
  4007f5:	78 79                	js     400870 <__GNU_EH_FRAME_HDR+0x64>
  4007f7:	7a 30                	jp     400829 <__GNU_EH_FRAME_HDR+0x1d>
  4007f9:	31 32                	xor    %esi,(%rdx)
  4007fb:	33 34 35 36 37 38 39 	xor    0x39383736(,%rsi,1),%esi
  400802:	2b 2f                	sub    (%rdi),%ebp
  400804:	00 25 63 00 0a 00    	add    %ah,0xa0063(%rip)        # 4a086d <__FRAME_END__+0x9ff01>

Disassembly of section .eh_frame_hdr:

000000000040080c <__GNU_EH_FRAME_HDR>:
  40080c:	01 1b                	add    %ebx,(%rbx)
  40080e:	03 3b                	add    (%rbx),%edi
  400810:	40 00 00             	add    %al,(%rax)
  400813:	00 07                	add    %al,(%rdi)
  400815:	00 00                	add    %al,(%rax)
  400817:	00 d4                	add    %dl,%ah
  400819:	fb                   	sti    
  40081a:	ff                   	(bad)  
  40081b:	ff 9c 00 00 00 f4 fb 	lcall  *-0x40c0000(%rax,%rax,1)
  400822:	ff                   	(bad)  
  400823:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
  400827:	00 24 fc             	add    %ah,(%rsp,%rdi,8)
  40082a:	ff                   	(bad)  
  40082b:	ff 88 00 00 00 e4    	decl   -0x1c000000(%rax)
  400831:	fc                   	cld    
  400832:	ff                   	(bad)  
  400833:	ff c4                	inc    %esp
  400835:	00 00                	add    %al,(%rax)
  400837:	00 94 fd ff ff e4 00 	add    %dl,0xe4ffff(%rbp,%rdi,8)
  40083e:	00 00                	add    %al,(%rax)
  400840:	34 ff                	xor    $0xff,%al
  400842:	ff                   	(bad)  
  400843:	ff 04 01             	incl   (%rcx,%rax,1)
  400846:	00 00                	add    %al,(%rax)
  400848:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
  400849:	ff                   	(bad)  
  40084a:	ff                   	(bad)  
  40084b:	ff 4c 01 00          	decl   0x0(%rcx,%rax,1)
	...

Disassembly of section .eh_frame:

0000000000400850 <__FRAME_END__-0x11c>:
  400850:	14 00                	adc    $0x0,%al
  400852:	00 00                	add    %al,(%rax)
  400854:	00 00                	add    %al,(%rax)
  400856:	00 00                	add    %al,(%rax)
  400858:	01 7a 52             	add    %edi,0x52(%rdx)
  40085b:	00 01                	add    %al,(%rcx)
  40085d:	78 10                	js     40086f <__GNU_EH_FRAME_HDR+0x63>
  40085f:	01 1b                	add    %ebx,(%rbx)
  400861:	0c 07                	or     $0x7,%al
  400863:	08 90 01 07 10 10    	or     %dl,0x10100701(%rax)
  400869:	00 00                	add    %al,(%rax)
  40086b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  40086e:	00 00                	add    %al,(%rax)
  400870:	90                   	nop
  400871:	fb                   	sti    
  400872:	ff                   	(bad)  
  400873:	ff 2b                	ljmp   *(%rbx)
  400875:	00 00                	add    %al,(%rax)
  400877:	00 00                	add    %al,(%rax)
  400879:	00 00                	add    %al,(%rax)
  40087b:	00 14 00             	add    %dl,(%rax,%rax,1)
  40087e:	00 00                	add    %al,(%rax)
  400880:	00 00                	add    %al,(%rax)
  400882:	00 00                	add    %al,(%rax)
  400884:	01 7a 52             	add    %edi,0x52(%rdx)
  400887:	00 01                	add    %al,(%rcx)
  400889:	78 10                	js     40089b <__GNU_EH_FRAME_HDR+0x8f>
  40088b:	01 1b                	add    %ebx,(%rbx)
  40088d:	0c 07                	or     $0x7,%al
  40088f:	08 90 01 00 00 10    	or     %dl,0x10000001(%rax)
  400895:	00 00                	add    %al,(%rax)
  400897:	00 1c 00             	add    %bl,(%rax,%rax,1)
  40089a:	00 00                	add    %al,(%rax)
  40089c:	94                   	xchg   %eax,%esp
  40089d:	fb                   	sti    
  40089e:	ff                   	(bad)  
  40089f:	ff 02                	incl   (%rdx)
  4008a1:	00 00                	add    %al,(%rax)
  4008a3:	00 00                	add    %al,(%rax)
  4008a5:	00 00                	add    %al,(%rax)
  4008a7:	00 24 00             	add    %ah,(%rax,%rax,1)
  4008aa:	00 00                	add    %al,(%rax)
  4008ac:	30 00                	xor    %al,(%rax)
  4008ae:	00 00                	add    %al,(%rax)
  4008b0:	30 fb                	xor    %bh,%bl
  4008b2:	ff                   	(bad)  
  4008b3:	ff 20                	jmpq   *(%rax)
  4008b5:	00 00                	add    %al,(%rax)
  4008b7:	00 00                	add    %al,(%rax)
  4008b9:	0e                   	(bad)  
  4008ba:	10 46 0e             	adc    %al,0xe(%rsi)
  4008bd:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  4008c0:	0b 77 08             	or     0x8(%rdi),%esi
  4008c3:	80 00 3f             	addb   $0x3f,(%rax)
  4008c6:	1a 3b                	sbb    (%rbx),%bh
  4008c8:	2a 33                	sub    (%rbx),%dh
  4008ca:	24 22                	and    $0x22,%al
  4008cc:	00 00                	add    %al,(%rax)
  4008ce:	00 00                	add    %al,(%rax)
  4008d0:	1c 00                	sbb    $0x0,%al
  4008d2:	00 00                	add    %al,(%rax)
  4008d4:	58                   	pop    %rax
  4008d5:	00 00                	add    %al,(%rax)
  4008d7:	00 18                	add    %bl,(%rax)
  4008d9:	fc                   	cld    
  4008da:	ff                   	(bad)  
  4008db:	ff a3 00 00 00 00    	jmpq   *0x0(%rbx)
  4008e1:	41 0e                	rex.B (bad) 
  4008e3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4008e9:	02 9e 0c 07 08 00    	add    0x8070c(%rsi),%bl
  4008ef:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4008f2:	00 00                	add    %al,(%rax)
  4008f4:	78 00                	js     4008f6 <__GNU_EH_FRAME_HDR+0xea>
  4008f6:	00 00                	add    %al,(%rax)
  4008f8:	a8 fc                	test   $0xfc,%al
  4008fa:	ff                   	(bad)  
  4008fb:	ff 73 01             	pushq  0x1(%rbx)
  4008fe:	00 00                	add    %al,(%rax)
  400900:	00 41 0e             	add    %al,0xe(%rcx)
  400903:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400909:	03 6e 01             	add    0x1(%rsi),%ebp
  40090c:	0c 07                	or     $0x7,%al
  40090e:	08 00                	or     %al,(%rax)
  400910:	44 00 00             	add    %r8b,(%rax)
  400913:	00 98 00 00 00 28    	add    %bl,0x28000000(%rax)
  400919:	fe                   	(bad)  
  40091a:	ff                   	(bad)  
  40091b:	ff 65 00             	jmpq   *0x0(%rbp)
  40091e:	00 00                	add    %al,(%rax)
  400920:	00 42 0e             	add    %al,0xe(%rdx)
  400923:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
  400929:	8e 03                	mov    (%rbx),%es
  40092b:	45 0e                	rex.RB (bad) 
  40092d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
  400933:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86701781 <_end+0xffffffff86100741>
  400939:	06                   	(bad)  
  40093a:	48 0e                	rex.W (bad) 
  40093c:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  400942:	72 0e                	jb     400952 <__GNU_EH_FRAME_HDR+0x146>
  400944:	38 41 0e             	cmp    %al,0xe(%rcx)
  400947:	30 41 0e             	xor    %al,0xe(%rcx)
  40094a:	28 42 0e             	sub    %al,0xe(%rdx)
  40094d:	20 42 0e             	and    %al,0xe(%rdx)
  400950:	18 42 0e             	sbb    %al,0xe(%rdx)
  400953:	10 42 0e             	adc    %al,0xe(%rdx)
  400956:	08 00                	or     %al,(%rax)
  400958:	10 00                	adc    %al,(%rax)
  40095a:	00 00                	add    %al,(%rax)
  40095c:	e0 00                	loopne 40095e <__GNU_EH_FRAME_HDR+0x152>
  40095e:	00 00                	add    %al,(%rax)
  400960:	50                   	push   %rax
  400961:	fe                   	(bad)  
  400962:	ff                   	(bad)  
  400963:	ff 02                	incl   (%rdx)
  400965:	00 00                	add    %al,(%rax)
  400967:	00 00                	add    %al,(%rax)
  400969:	00 00                	add    %al,(%rax)
	...

000000000040096c <__FRAME_END__>:
  40096c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	e0 04                	loopne 600e16 <__frame_dummy_init_array_entry+0x6>
  600e12:	40 00 00             	add    %al,(%rax)
  600e15:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	b0 04                	mov    $0x4,%al
  600e1a:	40 00 00             	add    %al,(%rax)
  600e1d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000600e20 <_DYNAMIC>:
  600e20:	01 00                	add    %eax,(%rax)
  600e22:	00 00                	add    %al,(%rax)
  600e24:	00 00                	add    %al,(%rax)
  600e26:	00 00                	add    %al,(%rax)
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	0c 00                	or     $0x0,%al
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	c8 03 40 00          	enterq $0x4003,$0x0
  600e3c:	00 00                	add    %al,(%rax)
  600e3e:	00 00                	add    %al,(%rax)
  600e40:	0d 00 00 00 00       	or     $0x0,%eax
  600e45:	00 00                	add    %al,(%rax)
  600e47:	00 b4 07 40 00 00 00 	add    %dh,0x40(%rdi,%rax,1)
  600e4e:	00 00                	add    %al,(%rax)
  600e50:	19 00                	sbb    %eax,(%rax)
  600e52:	00 00                	add    %al,(%rax)
  600e54:	00 00                	add    %al,(%rax)
  600e56:	00 00                	add    %al,(%rax)
  600e58:	10 0e                	adc    %cl,(%rsi)
  600e5a:	60                   	(bad)  
  600e5b:	00 00                	add    %al,(%rax)
  600e5d:	00 00                	add    %al,(%rax)
  600e5f:	00 1b                	add    %bl,(%rbx)
  600e61:	00 00                	add    %al,(%rax)
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 08                	add    %cl,(%rax)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 1a                	add    %bl,(%rdx)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 18                	add    %bl,(%rax)
  600e79:	0e                   	(bad)  
  600e7a:	60                   	(bad)  
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e82:	00 00                	add    %al,(%rax)
  600e84:	00 00                	add    %al,(%rax)
  600e86:	00 00                	add    %al,(%rax)
  600e88:	08 00                	or     %al,(%rax)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	f5                   	cmc    
  600e91:	fe                   	(bad)  
  600e92:	ff 6f 00             	ljmp   *0x0(%rdi)
  600e95:	00 00                	add    %al,(%rax)
  600e97:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ea5 <_DYNAMIC+0x85>
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 18                	add    %bl,(%rax)
  600ea9:	03 40 00             	add    0x0(%rax),%eax
  600eac:	00 00                	add    %al,(%rax)
  600eae:	00 00                	add    %al,(%rax)
  600eb0:	06                   	(bad)  
  600eb1:	00 00                	add    %al,(%rax)
  600eb3:	00 00                	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 0a                	add    %cl,(%rdx)
  600ec1:	00 00                	add    %al,(%rax)
  600ec3:	00 00                	add    %al,(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 3f                	add    %bh,(%rdi)
  600ec9:	00 00                	add    %al,(%rax)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 0b                	add    %cl,(%rbx)
  600ed1:	00 00                	add    %al,(%rax)
  600ed3:	00 00                	add    %al,(%rax)
  600ed5:	00 00                	add    %al,(%rax)
  600ed7:	00 18                	add    %bl,(%rax)
  600ed9:	00 00                	add    %al,(%rax)
  600edb:	00 00                	add    %al,(%rax)
  600edd:	00 00                	add    %al,(%rax)
  600edf:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 600ee5 <_DYNAMIC+0xc5>
	...
  600eed:	00 00                	add    %al,(%rax)
  600eef:	00 03                	add    %al,(%rbx)
	...
  600ef9:	10 60 00             	adc    %ah,0x0(%rax)
  600efc:	00 00                	add    %al,(%rax)
  600efe:	00 00                	add    %al,(%rax)
  600f00:	02 00                	add    (%rax),%al
  600f02:	00 00                	add    %al,(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	18 00                	sbb    %al,(%rax)
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	14 00                	adc    $0x0,%al
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	07                   	(bad)  
  600f19:	00 00                	add    %al,(%rax)
  600f1b:	00 00                	add    %al,(%rax)
  600f1d:	00 00                	add    %al,(%rax)
  600f1f:	00 17                	add    %dl,(%rdi)
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 b0 03 40 00 00    	add    %dh,0x4003(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 07                	add    %al,(%rdi)
  600f31:	00 00                	add    %al,(%rax)
  600f33:	00 00                	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 80 03 40 00 00    	add    %al,0x4003(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 08                	add    %cl,(%rax)
  600f41:	00 00                	add    %al,(%rax)
  600f43:	00 00                	add    %al,(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 30                	add    %dh,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 09                	add    %cl,(%rcx)
  600f51:	00 00                	add    %al,(%rax)
  600f53:	00 00                	add    %al,(%rax)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 18                	add    %bl,(%rax)
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 fe                	add    %bh,%dh
  600f61:	ff                   	(bad)  
  600f62:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 60 03             	add    %ah,0x3(%rax)
  600f6a:	40 00 00             	add    %al,(%rax)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 ff                	add    %bh,%bh
  600f71:	ff                   	(bad)  
  600f72:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 01                	add    %al,(%rcx)
  600f79:	00 00                	add    %al,(%rax)
  600f7b:	00 00                	add    %al,(%rax)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 f0                	add    %dh,%al
  600f81:	ff                   	(bad)  
  600f82:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 58 03             	add    %bl,0x3(%rax)
  600f8a:	40 00 00             	add    %al,(%rax)
	...

Disassembly of section .got:

0000000000600ff0 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	20 0e                	and    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 f6                	add    %dh,%dh
  601019:	03 40 00             	add    0x0(%rax),%eax
  60101c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601020 <__data_start>:
	...

0000000000601028 <__dso_handle>:
	...

0000000000601030 <base64>:
  601030:	c4                   	(bad)  
  601031:	07                   	(bad)  
  601032:	40 00 00             	add    %al,(%rax)
  601035:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000601038 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x400350>
   a:	74 75                	je     81 <_init-0x400347>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 35 2e 30 2d 33    	cs xor $0x332d302e,%eax
  14:	75 62                	jne    78 <_init-0x400350>
  16:	75 6e                	jne    86 <_init-0x400342>
  18:	74 75                	je     8f <_init-0x400339>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  22:	20 37                	and    %dh,(%rdi)
  24:	2e 35 2e 30 00 55    	cs xor $0x5500302e,%eax
  2a:	62                   	(bad)  
  2b:	75 6e                	jne    9b <_init-0x40032d>
  2d:	74 75                	je     a4 <_init-0x400324>
  2f:	20 63 6c             	and    %ah,0x6c(%rbx)
  32:	61                   	(bad)  
  33:	6e                   	outsb  %ds:(%rsi),(%dx)
  34:	67 20 76 65          	and    %dh,0x65(%esi)
  38:	72 73                	jb     ad <_init-0x40031b>
  3a:	69 6f 6e 20 31 31 2e 	imul   $0x2e313120,0x6e(%rdi),%ebp
  41:	31 2e                	xor    %ebp,(%rsi)
  43:	30 2d 2b 2b 32 30    	xor    %ch,0x30322b2b(%rip)        # 30322b74 <_end+0x2fd21b34>
  49:	32 31                	xor    (%rcx),%dh
  4b:	30 38                	xor    %bh,(%rax)
  4d:	30 36                	xor    %dh,(%rsi)
  4f:	30 39                	xor    %bh,(%rcx)
  51:	31 34 31             	xor    %esi,(%rcx,%rsi,1)
  54:	37                   	(bad)  
  55:	2b 31                	sub    (%rcx),%esi
  57:	66 64 65 63 35 39 62 	fs movslq %gs:0x66666239(%rip),%si        # 66666299 <_end+0x66065259>
  5e:	66 66 
  60:	63 31                	movslq (%rcx),%esi
  62:	2d 31 7e 65 78       	sub    $0x78657e31,%eax
  67:	70 31                	jo     9a <_init-0x40032e>
  69:	7e 32                	jle    9d <_init-0x40032b>
  6b:	30 32                	xor    %dh,(%rdx)
  6d:	31 30                	xor    %esi,(%rax)
  6f:	38 30                	cmp    %dh,(%rax)
  71:	36 30 37             	xor    %dh,%ss:(%rdi)
  74:	32 30                	xor    (%rax),%dh
  76:	34 30                	xor    $0x30,%al
  78:	2e 31 36             	xor    %esi,%cs:(%rsi)
  7b:	37                   	(bad)  
	...
